### YamlMime:ManagedReference
items:
- uid: Elements.Geometry.Mesh
  commentId: T:Elements.Geometry.Mesh
  id: Mesh
  parent: Elements.Geometry
  children:
  - Elements.Geometry.Mesh.#ctor
  - Elements.Geometry.Mesh.GetBuffers(System.Double[]@,System.UInt16[]@,System.Double[]@,System.Single[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Single[]@,System.Single[]@,System.UInt16@,System.UInt16@)
  - Elements.Geometry.Mesh.ToString
  - Elements.Geometry.Mesh.Triangles
  - Elements.Geometry.Mesh.Vertices
  langs:
  - csharp
  - vb
  name: Mesh
  nameWithType: Mesh
  fullName: Elements.Geometry.Mesh
  type: Class
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Mesh
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 139
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nAn indexed mesh.\n"
  example: []
  syntax:
    content: public class Mesh
    content.vb: Public Class Mesh
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Elements.Geometry.Mesh.Vertices
  commentId: P:Elements.Geometry.Mesh.Vertices
  id: Vertices
  parent: Elements.Geometry.Mesh
  langs:
  - csharp
  - vb
  name: Vertices
  nameWithType: Mesh.Vertices
  fullName: Elements.Geometry.Mesh.Vertices
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Vertices
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 147
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe mesh&apos;s vertices.\n"
  example: []
  syntax:
    content: public List<Vertex> Vertices { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Elements.Geometry.Vertex}
    content.vb: Public ReadOnly Property Vertices As List(Of Vertex)
  overload: Elements.Geometry.Mesh.Vertices*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Mesh.Triangles
  commentId: P:Elements.Geometry.Mesh.Triangles
  id: Triangles
  parent: Elements.Geometry.Mesh
  langs:
  - csharp
  - vb
  name: Triangles
  nameWithType: Mesh.Triangles
  fullName: Elements.Geometry.Mesh.Triangles
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Triangles
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 152
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe mesh&apos;s triangles.\n"
  example: []
  syntax:
    content: public List<Triangle> Triangles { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Elements.Geometry.Triangle}
    content.vb: Public ReadOnly Property Triangles As List(Of Triangle)
  overload: Elements.Geometry.Mesh.Triangles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Mesh.#ctor
  commentId: M:Elements.Geometry.Mesh.#ctor
  id: '#ctor'
  parent: Elements.Geometry.Mesh
  langs:
  - csharp
  - vb
  name: Mesh()
  nameWithType: Mesh.Mesh()
  fullName: Elements.Geometry.Mesh.Mesh()
  type: Constructor
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 157
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nConstruct an empty mesh.\n"
  example: []
  syntax:
    content: public Mesh()
    content.vb: Public Sub New
  overload: Elements.Geometry.Mesh.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Geometry.Mesh.ToString
  commentId: M:Elements.Geometry.Mesh.ToString
  id: ToString
  parent: Elements.Geometry.Mesh
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Mesh.ToString()
  fullName: Elements.Geometry.Mesh.ToString()
  type: Method
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: ToString
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 166
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nGet a string representation of the mesh.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Elements.Geometry.Mesh.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Elements.Geometry.Mesh.GetBuffers(System.Double[]@,System.UInt16[]@,System.Double[]@,System.Single[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Single[]@,System.Single[]@,System.UInt16@,System.UInt16@)
  commentId: M:Elements.Geometry.Mesh.GetBuffers(System.Double[]@,System.UInt16[]@,System.Double[]@,System.Single[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Single[]@,System.Single[]@,System.UInt16@,System.UInt16@)
  id: GetBuffers(System.Double[]@,System.UInt16[]@,System.Double[]@,System.Single[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Single[]@,System.Single[]@,System.UInt16@,System.UInt16@)
  parent: Elements.Geometry.Mesh
  langs:
  - csharp
  - vb
  name: GetBuffers(out Double[], out UInt16[], out Double[], out Single[], out Double[], out Double[], out Double[], out Double[], out Single[], out Single[], out UInt16, out UInt16)
  nameWithType: Mesh.GetBuffers(out Double[], out UInt16[], out Double[], out Single[], out Double[], out Double[], out Double[], out Double[], out Single[], out Single[], out UInt16, out UInt16)
  fullName: Elements.Geometry.Mesh.GetBuffers(out System.Double[], out System.UInt16[], out System.Double[], out System.Single[], out System.Double[], out System.Double[], out System.Double[], out System.Double[], out System.Single[], out System.Single[], out System.UInt16, out System.UInt16)
  type: Method
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: GetBuffers
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 176
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nGet all buffers required for rendering.\n"
  example: []
  syntax:
    content: public void GetBuffers(out double[] vertexBuffer, out ushort[] indexBuffer, out double[] normalBuffer, out float[] colorBuffer, out double[] v_max, out double[] v_min, out double[] n_min, out double[] n_max, out float[] c_min, out float[] c_max, out ushort index_min, out ushort index_max)
    parameters:
    - id: vertexBuffer
      type: System.Double[]
    - id: indexBuffer
      type: System.UInt16[]
    - id: normalBuffer
      type: System.Double[]
    - id: colorBuffer
      type: System.Single[]
    - id: v_max
      type: System.Double[]
    - id: v_min
      type: System.Double[]
    - id: n_min
      type: System.Double[]
    - id: n_max
      type: System.Double[]
    - id: c_min
      type: System.Single[]
    - id: c_max
      type: System.Single[]
    - id: index_min
      type: System.UInt16
    - id: index_max
      type: System.UInt16
    content.vb: Public Sub GetBuffers(ByRef vertexBuffer As Double(), ByRef indexBuffer As UShort(), ByRef normalBuffer As Double(), ByRef colorBuffer As Single(), ByRef v_max As Double(), ByRef v_min As Double(), ByRef n_min As Double(), ByRef n_max As Double(), ByRef c_min As Single(), ByRef c_max As Single(), ByRef index_min As UShort, ByRef index_max As UShort)
  overload: Elements.Geometry.Mesh.GetBuffers*
  nameWithType.vb: Mesh.GetBuffers(ByRef Double(), ByRef UInt16(), ByRef Double(), ByRef Single(), ByRef Double(), ByRef Double(), ByRef Double(), ByRef Double(), ByRef Single(), ByRef Single(), ByRef UInt16, ByRef UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Elements.Geometry.Mesh.GetBuffers(ByRef System.Double(), ByRef System.UInt16(), ByRef System.Double(), ByRef System.Single(), ByRef System.Double(), ByRef System.Double(), ByRef System.Double(), ByRef System.Double(), ByRef System.Single(), ByRef System.Single(), ByRef System.UInt16, ByRef System.UInt16)
  name.vb: GetBuffers(ByRef Double(), ByRef UInt16(), ByRef Double(), ByRef Single(), ByRef Double(), ByRef Double(), ByRef Double(), ByRef Double(), ByRef Single(), ByRef Single(), ByRef UInt16, ByRef UInt16)
references:
- uid: Elements.Geometry
  commentId: N:Elements.Geometry
  name: Elements.Geometry
  nameWithType: Elements.Geometry
  fullName: Elements.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.Geometry.Mesh.Vertices*
  commentId: Overload:Elements.Geometry.Mesh.Vertices
  name: Vertices
  nameWithType: Mesh.Vertices
  fullName: Elements.Geometry.Mesh.Vertices
- uid: System.Collections.Generic.List{Elements.Geometry.Vertex}
  commentId: T:System.Collections.Generic.List{Elements.Geometry.Vertex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vertex>
  nameWithType: List<Vertex>
  fullName: System.Collections.Generic.List<Elements.Geometry.Vertex>
  nameWithType.vb: List(Of Vertex)
  fullName.vb: System.Collections.Generic.List(Of Elements.Geometry.Vertex)
  name.vb: List(Of Vertex)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Elements.Geometry.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: Elements.Geometry.Vertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Elements.Geometry.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: Elements.Geometry.Vertex
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Elements.Geometry.Mesh.Triangles*
  commentId: Overload:Elements.Geometry.Mesh.Triangles
  name: Triangles
  nameWithType: Mesh.Triangles
  fullName: Elements.Geometry.Mesh.Triangles
- uid: System.Collections.Generic.List{Elements.Geometry.Triangle}
  commentId: T:System.Collections.Generic.List{Elements.Geometry.Triangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Triangle>
  nameWithType: List<Triangle>
  fullName: System.Collections.Generic.List<Elements.Geometry.Triangle>
  nameWithType.vb: List(Of Triangle)
  fullName.vb: System.Collections.Generic.List(Of Elements.Geometry.Triangle)
  name.vb: List(Of Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Elements.Geometry.Triangle
    name: Triangle
    nameWithType: Triangle
    fullName: Elements.Geometry.Triangle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Elements.Geometry.Triangle
    name: Triangle
    nameWithType: Triangle
    fullName: Elements.Geometry.Triangle
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Geometry.Mesh.#ctor*
  commentId: Overload:Elements.Geometry.Mesh.#ctor
  name: Mesh
  nameWithType: Mesh.Mesh
  fullName: Elements.Geometry.Mesh.Mesh
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Geometry.Mesh.ToString*
  commentId: Overload:Elements.Geometry.Mesh.ToString
  name: ToString
  nameWithType: Mesh.ToString
  fullName: Elements.Geometry.Mesh.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Elements.Geometry.Mesh.GetBuffers*
  commentId: Overload:Elements.Geometry.Mesh.GetBuffers
  name: GetBuffers
  nameWithType: Mesh.GetBuffers
  fullName: Elements.Geometry.Mesh.GetBuffers
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt16[]
  isExternal: true
  name: UInt16[]
  nameWithType: UInt16[]
  fullName: System.UInt16[]
  nameWithType.vb: UInt16()
  fullName.vb: System.UInt16()
  name.vb: UInt16()
  spec.csharp:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
