### YamlMime:ManagedReference
items:
- uid: Elements.Geometry.Profiles.WideFlangeProfile
  commentId: T:Elements.Geometry.Profiles.WideFlangeProfile
  id: WideFlangeProfile
  parent: Elements.Geometry.Profiles
  children:
  - Elements.Geometry.Profiles.WideFlangeProfile.#ctor(System.String)
  - Elements.Geometry.Profiles.WideFlangeProfile.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,Elements.Geometry.VerticalAlignment,Elements.Geometry.HorizontalAlignment,System.Double,System.Double)
  - Elements.Geometry.Profiles.WideFlangeProfile.A
  - Elements.Geometry.Profiles.WideFlangeProfile.bf
  - Elements.Geometry.Profiles.WideFlangeProfile.Cw
  - Elements.Geometry.Profiles.WideFlangeProfile.d
  - Elements.Geometry.Profiles.WideFlangeProfile.dAf
  - Elements.Geometry.Profiles.WideFlangeProfile.gage
  - Elements.Geometry.Profiles.WideFlangeProfile.Ix
  - Elements.Geometry.Profiles.WideFlangeProfile.Iy
  - Elements.Geometry.Profiles.WideFlangeProfile.J
  - Elements.Geometry.Profiles.WideFlangeProfile.k
  - Elements.Geometry.Profiles.WideFlangeProfile.k1
  - Elements.Geometry.Profiles.WideFlangeProfile.Qf
  - Elements.Geometry.Profiles.WideFlangeProfile.Qw
  - Elements.Geometry.Profiles.WideFlangeProfile.rt
  - Elements.Geometry.Profiles.WideFlangeProfile.rx
  - Elements.Geometry.Profiles.WideFlangeProfile.ry
  - Elements.Geometry.Profiles.WideFlangeProfile.Sw
  - Elements.Geometry.Profiles.WideFlangeProfile.Sx
  - Elements.Geometry.Profiles.WideFlangeProfile.Sy
  - Elements.Geometry.Profiles.WideFlangeProfile.T
  - Elements.Geometry.Profiles.WideFlangeProfile.tf
  - Elements.Geometry.Profiles.WideFlangeProfile.tw
  - Elements.Geometry.Profiles.WideFlangeProfile.Wno
  - Elements.Geometry.Profiles.WideFlangeProfile.Zx
  - Elements.Geometry.Profiles.WideFlangeProfile.Zy
  langs:
  - csharp
  - vb
  name: WideFlangeProfile
  nameWithType: WideFlangeProfile
  fullName: Elements.Geometry.Profiles.WideFlangeProfile
  type: Class
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: WideFlangeProfile
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 7
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: 'public class WideFlangeProfile : Profile, IIdentifiable'
    content.vb: >-
      Public Class WideFlangeProfile
          Inherits Profile
          Implements IIdentifiable
  inheritance:
  - System.Object
  - Elements.Geometry.Profile
  implements:
  - Elements.Interfaces.IIdentifiable
  inheritedMembers:
  - Elements.Geometry.Profile.Id
  - Elements.Geometry.Profile.Name
  - Elements.Geometry.Profile.Perimeter
  - Elements.Geometry.Profile.Voids
  - Elements.Geometry.Profile.Reversed
  - Elements.Geometry.Profile.Area
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Elements.Geometry.Profiles.WideFlangeProfile.A
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.A
  id: A
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: A
  nameWithType: WideFlangeProfile.A
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.A
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: A
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 9
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double A { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property A As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.A*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.d
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.d
  id: d
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: d
  nameWithType: WideFlangeProfile.d
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.d
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: d
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 12
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double d { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property d As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.d*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.tw
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.tw
  id: tw
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: tw
  nameWithType: WideFlangeProfile.tw
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.tw
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: tw
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 15
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double tw { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property tw As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.tw*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.bf
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.bf
  id: bf
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: bf
  nameWithType: WideFlangeProfile.bf
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.bf
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: bf
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 18
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double bf { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property bf As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.bf*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.tf
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.tf
  id: tf
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: tf
  nameWithType: WideFlangeProfile.tf
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.tf
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: tf
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 21
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double tf { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property tf As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.tf*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.T
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.T
  id: T
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: T
  nameWithType: WideFlangeProfile.T
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.T
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: T
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 24
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public string T { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property T As String
  overload: Elements.Geometry.Profiles.WideFlangeProfile.T*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.k
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.k
  id: k
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: k
  nameWithType: WideFlangeProfile.k
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.k
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: k
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 27
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double k { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property k As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.k*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.k1
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.k1
  id: k1
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: k1
  nameWithType: WideFlangeProfile.k1
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.k1
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: k1
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 30
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double k1 { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property k1 As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.k1*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.gage
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.gage
  id: gage
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: gage
  nameWithType: WideFlangeProfile.gage
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.gage
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: gage
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 33
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public string gage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property gage As String
  overload: Elements.Geometry.Profiles.WideFlangeProfile.gage*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.rt
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.rt
  id: rt
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: rt
  nameWithType: WideFlangeProfile.rt
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.rt
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: rt
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 36
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double rt { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property rt As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.rt*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.dAf
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.dAf
  id: dAf
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: dAf
  nameWithType: WideFlangeProfile.dAf
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.dAf
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: dAf
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 39
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double dAf { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property dAf As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.dAf*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Ix
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Ix
  id: Ix
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Ix
  nameWithType: WideFlangeProfile.Ix
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Ix
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Ix
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 42
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Ix { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Ix As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Ix*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Sx
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Sx
  id: Sx
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Sx
  nameWithType: WideFlangeProfile.Sx
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Sx
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Sx
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 45
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Sx { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Sx As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Sx*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.rx
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.rx
  id: rx
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: rx
  nameWithType: WideFlangeProfile.rx
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.rx
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: rx
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 48
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double rx { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property rx As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.rx*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Iy
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Iy
  id: Iy
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Iy
  nameWithType: WideFlangeProfile.Iy
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Iy
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Iy
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 51
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Iy { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Iy As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Iy*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Sy
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Sy
  id: Sy
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Sy
  nameWithType: WideFlangeProfile.Sy
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Sy
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Sy
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 54
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Sy { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Sy As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Sy*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.ry
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.ry
  id: ry
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: ry
  nameWithType: WideFlangeProfile.ry
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.ry
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: ry
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 57
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double ry { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property ry As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.ry*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Zx
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Zx
  id: Zx
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Zx
  nameWithType: WideFlangeProfile.Zx
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Zx
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Zx
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 60
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Zx { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Zx As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Zx*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Zy
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Zy
  id: Zy
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Zy
  nameWithType: WideFlangeProfile.Zy
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Zy
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Zy
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 63
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Zy { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Zy As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Zy*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.J
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.J
  id: J
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: J
  nameWithType: WideFlangeProfile.J
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.J
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: J
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 66
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double J { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property J As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.J*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Cw
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Cw
  id: Cw
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Cw
  nameWithType: WideFlangeProfile.Cw
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Cw
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Cw
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 69
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Cw { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Cw As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Cw*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Wno
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Wno
  id: Wno
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Wno
  nameWithType: WideFlangeProfile.Wno
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Wno
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Wno
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 72
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Wno { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Wno As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Wno*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Sw
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Sw
  id: Sw
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Sw
  nameWithType: WideFlangeProfile.Sw
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Sw
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Sw
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 75
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Sw { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Sw As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Sw*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Qf
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Qf
  id: Qf
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Qf
  nameWithType: WideFlangeProfile.Qf
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Qf
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Qf
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 78
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Qf { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Qf As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Qf*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Qw
  commentId: P:Elements.Geometry.Profiles.WideFlangeProfile.Qw
  id: Qw
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: Qw
  nameWithType: WideFlangeProfile.Qw
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Qw
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Qw
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 81
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: >-
      [JsonIgnore]

      public double Qw { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Qw As Double
  overload: Elements.Geometry.Profiles.WideFlangeProfile.Qw*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Profiles.WideFlangeProfile.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,Elements.Geometry.VerticalAlignment,Elements.Geometry.HorizontalAlignment,System.Double,System.Double)
  commentId: M:Elements.Geometry.Profiles.WideFlangeProfile.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,Elements.Geometry.VerticalAlignment,Elements.Geometry.HorizontalAlignment,System.Double,System.Double)
  id: '#ctor(System.String,System.Double,System.Double,System.Double,System.Double,Elements.Geometry.VerticalAlignment,Elements.Geometry.HorizontalAlignment,System.Double,System.Double)'
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: WideFlangeProfile(String, Double, Double, Double, Double, VerticalAlignment, HorizontalAlignment, Double, Double)
  nameWithType: WideFlangeProfile.WideFlangeProfile(String, Double, Double, Double, Double, VerticalAlignment, HorizontalAlignment, Double, Double)
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.WideFlangeProfile(System.String, System.Double, System.Double, System.Double, System.Double, Elements.Geometry.VerticalAlignment, Elements.Geometry.HorizontalAlignment, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 84
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: public WideFlangeProfile(string name, double bf = 0.1, double d = 0.05, double tf = 0.005, double tw = 0.005, VerticalAlignment verticalAlignment = VerticalAlignment.Center, HorizontalAlignment horizontalAlignment = HorizontalAlignment.Center, double verticalOffset = 0, double horizontalOffset = 0)
    parameters:
    - id: name
      type: System.String
    - id: bf
      type: System.Double
    - id: d
      type: System.Double
    - id: tf
      type: System.Double
    - id: tw
      type: System.Double
    - id: verticalAlignment
      type: Elements.Geometry.VerticalAlignment
    - id: horizontalAlignment
      type: Elements.Geometry.HorizontalAlignment
    - id: verticalOffset
      type: System.Double
    - id: horizontalOffset
      type: System.Double
    content.vb: Public Sub New(name As String, bf As Double = 0.1, d As Double = 0.05, tf As Double = 0.005, tw As Double = 0.005, verticalAlignment As VerticalAlignment = VerticalAlignment.Center, horizontalAlignment As HorizontalAlignment = HorizontalAlignment.Center, verticalOffset As Double = 0, horizontalOffset As Double = 0)
  overload: Elements.Geometry.Profiles.WideFlangeProfile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Geometry.Profiles.WideFlangeProfile.#ctor(System.String)
  commentId: M:Elements.Geometry.Profiles.WideFlangeProfile.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Elements.Geometry.Profiles.WideFlangeProfile
  langs:
  - csharp
  - vb
  name: WideFlangeProfile(String)
  nameWithType: WideFlangeProfile.WideFlangeProfile(String)
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.WideFlangeProfile(System.String)
  type: Constructor
  source:
    remote:
      path: src/Elements/Geometry/Profiles/WideFlangeProfile.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Geometry/Profiles/WideFlangeProfile.cs
    startLine: 94
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Profiles
  syntax:
    content: public WideFlangeProfile(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: Elements.Geometry.Profiles.WideFlangeProfile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Elements.Geometry.Profiles
  commentId: N:Elements.Geometry.Profiles
  name: Elements.Geometry.Profiles
  nameWithType: Elements.Geometry.Profiles
  fullName: Elements.Geometry.Profiles
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Elements.Geometry.Profile
  commentId: T:Elements.Geometry.Profile
  parent: Elements.Geometry
  name: Profile
  nameWithType: Profile
  fullName: Elements.Geometry.Profile
- uid: Elements.Interfaces.IIdentifiable
  commentId: T:Elements.Interfaces.IIdentifiable
  parent: Elements.Interfaces
  name: IIdentifiable
  nameWithType: IIdentifiable
  fullName: Elements.Interfaces.IIdentifiable
- uid: Elements.Geometry.Profile.Id
  commentId: P:Elements.Geometry.Profile.Id
  parent: Elements.Geometry.Profile
  name: Id
  nameWithType: Profile.Id
  fullName: Elements.Geometry.Profile.Id
- uid: Elements.Geometry.Profile.Name
  commentId: P:Elements.Geometry.Profile.Name
  parent: Elements.Geometry.Profile
  name: Name
  nameWithType: Profile.Name
  fullName: Elements.Geometry.Profile.Name
- uid: Elements.Geometry.Profile.Perimeter
  commentId: P:Elements.Geometry.Profile.Perimeter
  parent: Elements.Geometry.Profile
  name: Perimeter
  nameWithType: Profile.Perimeter
  fullName: Elements.Geometry.Profile.Perimeter
- uid: Elements.Geometry.Profile.Voids
  commentId: P:Elements.Geometry.Profile.Voids
  parent: Elements.Geometry.Profile
  name: Voids
  nameWithType: Profile.Voids
  fullName: Elements.Geometry.Profile.Voids
- uid: Elements.Geometry.Profile.Reversed
  commentId: M:Elements.Geometry.Profile.Reversed
  parent: Elements.Geometry.Profile
  name: Reversed()
  nameWithType: Profile.Reversed()
  fullName: Elements.Geometry.Profile.Reversed()
  spec.csharp:
  - uid: Elements.Geometry.Profile.Reversed
    name: Reversed
    nameWithType: Profile.Reversed
    fullName: Elements.Geometry.Profile.Reversed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Elements.Geometry.Profile.Reversed
    name: Reversed
    nameWithType: Profile.Reversed
    fullName: Elements.Geometry.Profile.Reversed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Geometry.Profile.Area
  commentId: M:Elements.Geometry.Profile.Area
  parent: Elements.Geometry.Profile
  name: Area()
  nameWithType: Profile.Area()
  fullName: Elements.Geometry.Profile.Area()
  spec.csharp:
  - uid: Elements.Geometry.Profile.Area
    name: Area
    nameWithType: Profile.Area
    fullName: Elements.Geometry.Profile.Area
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Elements.Geometry.Profile.Area
    name: Area
    nameWithType: Profile.Area
    fullName: Elements.Geometry.Profile.Area
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.Geometry
  commentId: N:Elements.Geometry
  name: Elements.Geometry
  nameWithType: Elements.Geometry
  fullName: Elements.Geometry
- uid: Elements.Interfaces
  commentId: N:Elements.Interfaces
  name: Elements.Interfaces
  nameWithType: Elements.Interfaces
  fullName: Elements.Interfaces
- uid: Elements.Geometry.Profiles.WideFlangeProfile.A*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.A
  name: A
  nameWithType: WideFlangeProfile.A
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.A
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Elements.Geometry.Profiles.WideFlangeProfile.d*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.d
  name: d
  nameWithType: WideFlangeProfile.d
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.d
- uid: Elements.Geometry.Profiles.WideFlangeProfile.tw*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.tw
  name: tw
  nameWithType: WideFlangeProfile.tw
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.tw
- uid: Elements.Geometry.Profiles.WideFlangeProfile.bf*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.bf
  name: bf
  nameWithType: WideFlangeProfile.bf
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.bf
- uid: Elements.Geometry.Profiles.WideFlangeProfile.tf*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.tf
  name: tf
  nameWithType: WideFlangeProfile.tf
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.tf
- uid: Elements.Geometry.Profiles.WideFlangeProfile.T*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.T
  name: T
  nameWithType: WideFlangeProfile.T
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Elements.Geometry.Profiles.WideFlangeProfile.k*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.k
  name: k
  nameWithType: WideFlangeProfile.k
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.k
- uid: Elements.Geometry.Profiles.WideFlangeProfile.k1*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.k1
  name: k1
  nameWithType: WideFlangeProfile.k1
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.k1
- uid: Elements.Geometry.Profiles.WideFlangeProfile.gage*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.gage
  name: gage
  nameWithType: WideFlangeProfile.gage
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.gage
- uid: Elements.Geometry.Profiles.WideFlangeProfile.rt*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.rt
  name: rt
  nameWithType: WideFlangeProfile.rt
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.rt
- uid: Elements.Geometry.Profiles.WideFlangeProfile.dAf*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.dAf
  name: dAf
  nameWithType: WideFlangeProfile.dAf
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.dAf
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Ix*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Ix
  name: Ix
  nameWithType: WideFlangeProfile.Ix
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Ix
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Sx*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Sx
  name: Sx
  nameWithType: WideFlangeProfile.Sx
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Sx
- uid: Elements.Geometry.Profiles.WideFlangeProfile.rx*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.rx
  name: rx
  nameWithType: WideFlangeProfile.rx
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.rx
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Iy*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Iy
  name: Iy
  nameWithType: WideFlangeProfile.Iy
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Iy
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Sy*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Sy
  name: Sy
  nameWithType: WideFlangeProfile.Sy
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Sy
- uid: Elements.Geometry.Profiles.WideFlangeProfile.ry*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.ry
  name: ry
  nameWithType: WideFlangeProfile.ry
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.ry
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Zx*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Zx
  name: Zx
  nameWithType: WideFlangeProfile.Zx
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Zx
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Zy*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Zy
  name: Zy
  nameWithType: WideFlangeProfile.Zy
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Zy
- uid: Elements.Geometry.Profiles.WideFlangeProfile.J*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.J
  name: J
  nameWithType: WideFlangeProfile.J
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.J
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Cw*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Cw
  name: Cw
  nameWithType: WideFlangeProfile.Cw
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Cw
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Wno*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Wno
  name: Wno
  nameWithType: WideFlangeProfile.Wno
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Wno
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Sw*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Sw
  name: Sw
  nameWithType: WideFlangeProfile.Sw
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Sw
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Qf*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Qf
  name: Qf
  nameWithType: WideFlangeProfile.Qf
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Qf
- uid: Elements.Geometry.Profiles.WideFlangeProfile.Qw*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.Qw
  name: Qw
  nameWithType: WideFlangeProfile.Qw
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.Qw
- uid: Elements.Geometry.Profiles.WideFlangeProfile.#ctor*
  commentId: Overload:Elements.Geometry.Profiles.WideFlangeProfile.#ctor
  name: WideFlangeProfile
  nameWithType: WideFlangeProfile.WideFlangeProfile
  fullName: Elements.Geometry.Profiles.WideFlangeProfile.WideFlangeProfile
- uid: Elements.Geometry.VerticalAlignment
  commentId: T:Elements.Geometry.VerticalAlignment
  parent: Elements.Geometry
  name: VerticalAlignment
  nameWithType: VerticalAlignment
  fullName: Elements.Geometry.VerticalAlignment
- uid: Elements.Geometry.HorizontalAlignment
  commentId: T:Elements.Geometry.HorizontalAlignment
  parent: Elements.Geometry
  name: HorizontalAlignment
  nameWithType: HorizontalAlignment
  fullName: Elements.Geometry.HorizontalAlignment
