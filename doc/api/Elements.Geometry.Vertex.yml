### YamlMime:ManagedReference
items:
- uid: Elements.Geometry.Vertex
  commentId: T:Elements.Geometry.Vertex
  id: Vertex
  parent: Elements.Geometry
  children:
  - Elements.Geometry.Vertex.#ctor(Elements.Geometry.Vector3,Elements.Geometry.Vector3,Elements.Geometry.Color)
  - Elements.Geometry.Vertex.Color
  - Elements.Geometry.Vertex.Index
  - Elements.Geometry.Vertex.Normal
  - Elements.Geometry.Vertex.Position
  langs:
  - csharp
  - vb
  name: Vertex
  nameWithType: Vertex
  fullName: Elements.Geometry.Vertex
  type: Class
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Vertex
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 99
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nA mesh vertex.\n"
  example: []
  syntax:
    content: public class Vertex
    content.vb: Public Class Vertex
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Elements.Geometry.Vertex.Position
  commentId: P:Elements.Geometry.Vertex.Position
  id: Position
  parent: Elements.Geometry.Vertex
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Vertex.Position
  fullName: Elements.Geometry.Vertex.Position
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Position
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 104
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe position of the vertex.\n"
  example: []
  syntax:
    content: public Vector3 Position { get; }
    parameters: []
    return:
      type: Elements.Geometry.Vector3
    content.vb: Public ReadOnly Property Position As Vector3
  overload: Elements.Geometry.Vertex.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Vertex.Normal
  commentId: P:Elements.Geometry.Vertex.Normal
  id: Normal
  parent: Elements.Geometry.Vertex
  langs:
  - csharp
  - vb
  name: Normal
  nameWithType: Vertex.Normal
  fullName: Elements.Geometry.Vertex.Normal
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Normal
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 109
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe vertex&apos;s normal.\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public Vector3 Normal { get; }
    parameters: []
    return:
      type: Elements.Geometry.Vector3
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Normal As Vector3
  overload: Elements.Geometry.Vertex.Normal*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Vertex.Color
  commentId: P:Elements.Geometry.Vertex.Color
  id: Color
  parent: Elements.Geometry.Vertex
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Vertex.Color
  fullName: Elements.Geometry.Vertex.Color
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Color
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 115
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe vertex&apos;s color.\n"
  example: []
  syntax:
    content: public Color Color { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public ReadOnly Property Color As Color
  overload: Elements.Geometry.Vertex.Color*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Vertex.Index
  commentId: P:Elements.Geometry.Vertex.Index
  id: Index
  parent: Elements.Geometry.Vertex
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: Vertex.Index
  fullName: Elements.Geometry.Vertex.Index
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Index
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 120
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe index of the vertex within a mesh.\n"
  example: []
  syntax:
    content: public int Index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Index As Integer
  overload: Elements.Geometry.Vertex.Index*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Vertex.#ctor(Elements.Geometry.Vector3,Elements.Geometry.Vector3,Elements.Geometry.Color)
  commentId: M:Elements.Geometry.Vertex.#ctor(Elements.Geometry.Vector3,Elements.Geometry.Vector3,Elements.Geometry.Color)
  id: '#ctor(Elements.Geometry.Vector3,Elements.Geometry.Vector3,Elements.Geometry.Color)'
  parent: Elements.Geometry.Vertex
  langs:
  - csharp
  - vb
  name: Vertex(Vector3, Vector3, Color)
  nameWithType: Vertex.Vertex(Vector3, Vector3, Color)
  fullName: Elements.Geometry.Vertex.Vertex(Elements.Geometry.Vector3, Elements.Geometry.Vector3, Elements.Geometry.Color)
  type: Constructor
  source:
    remote:
      path: src/Elements/Geometry/Mesh.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Geometry/Mesh.cs
    startLine: 128
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nCreate a vertex.\n"
  example: []
  syntax:
    content: public Vertex(Vector3 position, Vector3 normal = null, Color color = null)
    parameters:
    - id: position
      type: Elements.Geometry.Vector3
      description: The position of the vertex.
    - id: normal
      type: Elements.Geometry.Vector3
      description: The vertex&apos;s normal.
    - id: color
      type: Elements.Geometry.Color
      description: The vertex&apos;s color.
    content.vb: Public Sub New(position As Vector3, normal As Vector3 = Nothing, color As Color = Nothing)
  overload: Elements.Geometry.Vertex.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Elements.Geometry
  commentId: N:Elements.Geometry
  name: Elements.Geometry
  nameWithType: Elements.Geometry
  fullName: Elements.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.Geometry.Vertex.Position*
  commentId: Overload:Elements.Geometry.Vertex.Position
  name: Position
  nameWithType: Vertex.Position
  fullName: Elements.Geometry.Vertex.Position
- uid: Elements.Geometry.Vector3
  commentId: T:Elements.Geometry.Vector3
  parent: Elements.Geometry
  name: Vector3
  nameWithType: Vector3
  fullName: Elements.Geometry.Vector3
- uid: Elements.Geometry.Vertex.Normal*
  commentId: Overload:Elements.Geometry.Vertex.Normal
  name: Normal
  nameWithType: Vertex.Normal
  fullName: Elements.Geometry.Vertex.Normal
- uid: Elements.Geometry.Vertex.Color*
  commentId: Overload:Elements.Geometry.Vertex.Color
  name: Color
  nameWithType: Vertex.Color
  fullName: Elements.Geometry.Vertex.Color
- uid: Elements.Geometry.Color
  commentId: T:Elements.Geometry.Color
  parent: Elements.Geometry
  name: Color
  nameWithType: Color
  fullName: Elements.Geometry.Color
- uid: Elements.Geometry.Vertex.Index*
  commentId: Overload:Elements.Geometry.Vertex.Index
  name: Index
  nameWithType: Vertex.Index
  fullName: Elements.Geometry.Vertex.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Elements.Geometry.Vertex.#ctor*
  commentId: Overload:Elements.Geometry.Vertex.#ctor
  name: Vertex
  nameWithType: Vertex.Vertex
  fullName: Elements.Geometry.Vertex.Vertex
