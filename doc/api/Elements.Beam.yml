### YamlMime:ManagedReference
items:
- uid: Elements.Beam
  commentId: T:Elements.Beam
  id: Beam
  parent: Elements
  children:
  - Elements.Beam.#ctor(Elements.Geometry.Interfaces.ICurve,Elements.StructuralFramingType,System.Double,System.Double,Elements.Geometry.Transform)
  langs:
  - csharp
  - vb
  name: Beam
  nameWithType: Beam
  fullName: Elements.Beam
  type: Class
  source:
    remote:
      path: src/Elements/Beam.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Beam
    path: ../src/Elements/Beam.cs
    startLine: 13
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nA structural framing element defined by a center line curve and a profile.\n"
  example:
  - "\n<pre><code source=\"../../test/BeamTest.cs\">using Elements;\nusing Elements.Geometry;\nusing Elements.Geometry.Interfaces;\nusing Elements.Geometry.Profiles;\nusing System;\nusing Xunit;\n\nnamespace Elements.Tests\n{\npublic class BeamTest : ModelTest\n{\n    [Fact]\n    public void Beam()\n    {\n        this.Name = &quot;Elements_Beam&quot;;\n\n        var line = new Line(Vector3.Origin, new Vector3(5,0,0));\n        var profile = WideFlangeProfileServer.Instance.GetProfileByName(&quot;W44x335&quot;);\n        var framingType = new StructuralFramingType(profile.Name, profile, BuiltInMaterials.Steel);\n        var beam = new Beam(line, framingType);\n\n        this.Model.AddElement(beam);\n    }\n}\n}</code></pre>\n"
  syntax:
    content: 'public class Beam : StructuralFraming, IElement, IIdentifiable, ITransformable, IPropertySet, IElementType<StructuralFramingType>, ISweepAlongCurve, IProfile'
    content.vb: >-
      Public Class Beam
          Inherits StructuralFraming
          Implements IElement, IIdentifiable, ITransformable, IPropertySet, IElementType(Of StructuralFramingType), ISweepAlongCurve, IProfile
  inheritance:
  - System.Object
  - Elements.Element
  - Elements.StructuralFraming
  implements:
  - Elements.Interfaces.IElement
  - Elements.Interfaces.IIdentifiable
  - Elements.Geometry.Interfaces.ITransformable
  - Elements.Interfaces.IPropertySet
  - Elements.Interfaces.IElementType{Elements.StructuralFramingType}
  - Elements.Geometry.Interfaces.ISweepAlongCurve
  - Elements.Geometry.Interfaces.IProfile
  inheritedMembers:
  - Elements.StructuralFraming.Curve
  - Elements.StructuralFraming.StartSetback
  - Elements.StructuralFraming.EndSetback
  - Elements.StructuralFraming.ElementType
  - Elements.StructuralFraming.Profile
  - Elements.StructuralFraming.Volume
  - Elements.StructuralFraming.ProfileTransformed
  - Elements.Element.Id
  - Elements.Element.Type
  - Elements.Element.Properties
  - Elements.Element.Transform
  - Elements.Element.Name
  - Elements.Element.AddProperty(System.String,Elements.Interfaces.IProperty)
  - Elements.Element.RemoveProperty(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Elements.Beam.#ctor(Elements.Geometry.Interfaces.ICurve,Elements.StructuralFramingType,System.Double,System.Double,Elements.Geometry.Transform)
  commentId: M:Elements.Beam.#ctor(Elements.Geometry.Interfaces.ICurve,Elements.StructuralFramingType,System.Double,System.Double,Elements.Geometry.Transform)
  id: '#ctor(Elements.Geometry.Interfaces.ICurve,Elements.StructuralFramingType,System.Double,System.Double,Elements.Geometry.Transform)'
  parent: Elements.Beam
  langs:
  - csharp
  - vb
  name: Beam(ICurve, StructuralFramingType, Double, Double, Transform)
  nameWithType: Beam.Beam(ICurve, StructuralFramingType, Double, Double, Transform)
  fullName: Elements.Beam.Beam(Elements.Geometry.Interfaces.ICurve, Elements.StructuralFramingType, System.Double, System.Double, Elements.Geometry.Transform)
  type: Constructor
  source:
    remote:
      path: src/Elements/Beam.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Beam.cs
    startLine: 23
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nConstruct a beam.\n"
  example: []
  syntax:
    content: >-
      [JsonConstructor]

      public Beam(ICurve curve, StructuralFramingType elementType, double startSetback = 0, double endSetback = 0, Transform transform = null)
    parameters:
    - id: curve
      type: Elements.Geometry.Interfaces.ICurve
      description: The beam&apos;s center line.
    - id: elementType
      type: Elements.StructuralFramingType
      description: The beam&apos;s structural framing type.
    - id: startSetback
      type: System.Double
      description: The setback of the beam&apos;s geometry at the start.
    - id: endSetback
      type: System.Double
      description: The setback of the beam&apos;s geometry at the end.
    - id: transform
      type: Elements.Geometry.Transform
      description: The beam&apos;s transform.
    content.vb: >-
      <JsonConstructor>

      Public Sub New(curve As ICurve, elementType As StructuralFramingType, startSetback As Double = 0, endSetback As Double = 0, transform As Transform = Nothing)
  overload: Elements.Beam.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Elements
  commentId: N:Elements
  name: Elements
  nameWithType: Elements
  fullName: Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Elements.Element
  commentId: T:Elements.Element
  parent: Elements
  name: Element
  nameWithType: Element
  fullName: Elements.Element
- uid: Elements.StructuralFraming
  commentId: T:Elements.StructuralFraming
  parent: Elements
  name: StructuralFraming
  nameWithType: StructuralFraming
  fullName: Elements.StructuralFraming
- uid: Elements.Interfaces.IElement
  commentId: T:Elements.Interfaces.IElement
  parent: Elements.Interfaces
  name: IElement
  nameWithType: IElement
  fullName: Elements.Interfaces.IElement
- uid: Elements.Interfaces.IIdentifiable
  commentId: T:Elements.Interfaces.IIdentifiable
  parent: Elements.Interfaces
  name: IIdentifiable
  nameWithType: IIdentifiable
  fullName: Elements.Interfaces.IIdentifiable
- uid: Elements.Geometry.Interfaces.ITransformable
  commentId: T:Elements.Geometry.Interfaces.ITransformable
  parent: Elements.Geometry.Interfaces
  name: ITransformable
  nameWithType: ITransformable
  fullName: Elements.Geometry.Interfaces.ITransformable
- uid: Elements.Interfaces.IPropertySet
  commentId: T:Elements.Interfaces.IPropertySet
  parent: Elements.Interfaces
  name: IPropertySet
  nameWithType: IPropertySet
  fullName: Elements.Interfaces.IPropertySet
- uid: Elements.Interfaces.IElementType{Elements.StructuralFramingType}
  commentId: T:Elements.Interfaces.IElementType{Elements.StructuralFramingType}
  parent: Elements.Interfaces
  definition: Elements.Interfaces.IElementType`1
  name: IElementType<StructuralFramingType>
  nameWithType: IElementType<StructuralFramingType>
  fullName: Elements.Interfaces.IElementType<Elements.StructuralFramingType>
  nameWithType.vb: IElementType(Of StructuralFramingType)
  fullName.vb: Elements.Interfaces.IElementType(Of Elements.StructuralFramingType)
  name.vb: IElementType(Of StructuralFramingType)
  spec.csharp:
  - uid: Elements.Interfaces.IElementType`1
    name: IElementType
    nameWithType: IElementType
    fullName: Elements.Interfaces.IElementType
  - name: <
    nameWithType: <
    fullName: <
  - uid: Elements.StructuralFramingType
    name: StructuralFramingType
    nameWithType: StructuralFramingType
    fullName: Elements.StructuralFramingType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Elements.Interfaces.IElementType`1
    name: IElementType
    nameWithType: IElementType
    fullName: Elements.Interfaces.IElementType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Elements.StructuralFramingType
    name: StructuralFramingType
    nameWithType: StructuralFramingType
    fullName: Elements.StructuralFramingType
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Geometry.Interfaces.ISweepAlongCurve
  commentId: T:Elements.Geometry.Interfaces.ISweepAlongCurve
  parent: Elements.Geometry.Interfaces
  name: ISweepAlongCurve
  nameWithType: ISweepAlongCurve
  fullName: Elements.Geometry.Interfaces.ISweepAlongCurve
- uid: Elements.Geometry.Interfaces.IProfile
  commentId: T:Elements.Geometry.Interfaces.IProfile
  parent: Elements.Geometry.Interfaces
  name: IProfile
  nameWithType: IProfile
  fullName: Elements.Geometry.Interfaces.IProfile
- uid: Elements.StructuralFraming.Curve
  commentId: P:Elements.StructuralFraming.Curve
  parent: Elements.StructuralFraming
  name: Curve
  nameWithType: StructuralFraming.Curve
  fullName: Elements.StructuralFraming.Curve
- uid: Elements.StructuralFraming.StartSetback
  commentId: P:Elements.StructuralFraming.StartSetback
  parent: Elements.StructuralFraming
  name: StartSetback
  nameWithType: StructuralFraming.StartSetback
  fullName: Elements.StructuralFraming.StartSetback
- uid: Elements.StructuralFraming.EndSetback
  commentId: P:Elements.StructuralFraming.EndSetback
  parent: Elements.StructuralFraming
  name: EndSetback
  nameWithType: StructuralFraming.EndSetback
  fullName: Elements.StructuralFraming.EndSetback
- uid: Elements.StructuralFraming.ElementType
  commentId: P:Elements.StructuralFraming.ElementType
  parent: Elements.StructuralFraming
  name: ElementType
  nameWithType: StructuralFraming.ElementType
  fullName: Elements.StructuralFraming.ElementType
- uid: Elements.StructuralFraming.Profile
  commentId: P:Elements.StructuralFraming.Profile
  parent: Elements.StructuralFraming
  name: Profile
  nameWithType: StructuralFraming.Profile
  fullName: Elements.StructuralFraming.Profile
- uid: Elements.StructuralFraming.Volume
  commentId: M:Elements.StructuralFraming.Volume
  parent: Elements.StructuralFraming
  name: Volume()
  nameWithType: StructuralFraming.Volume()
  fullName: Elements.StructuralFraming.Volume()
  spec.csharp:
  - uid: Elements.StructuralFraming.Volume
    name: Volume
    nameWithType: StructuralFraming.Volume
    fullName: Elements.StructuralFraming.Volume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Elements.StructuralFraming.Volume
    name: Volume
    nameWithType: StructuralFraming.Volume
    fullName: Elements.StructuralFraming.Volume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.StructuralFraming.ProfileTransformed
  commentId: M:Elements.StructuralFraming.ProfileTransformed
  parent: Elements.StructuralFraming
  name: ProfileTransformed()
  nameWithType: StructuralFraming.ProfileTransformed()
  fullName: Elements.StructuralFraming.ProfileTransformed()
  spec.csharp:
  - uid: Elements.StructuralFraming.ProfileTransformed
    name: ProfileTransformed
    nameWithType: StructuralFraming.ProfileTransformed
    fullName: Elements.StructuralFraming.ProfileTransformed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Elements.StructuralFraming.ProfileTransformed
    name: ProfileTransformed
    nameWithType: StructuralFraming.ProfileTransformed
    fullName: Elements.StructuralFraming.ProfileTransformed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Element.Id
  commentId: P:Elements.Element.Id
  parent: Elements.Element
  name: Id
  nameWithType: Element.Id
  fullName: Elements.Element.Id
- uid: Elements.Element.Type
  commentId: P:Elements.Element.Type
  parent: Elements.Element
  name: Type
  nameWithType: Element.Type
  fullName: Elements.Element.Type
- uid: Elements.Element.Properties
  commentId: P:Elements.Element.Properties
  parent: Elements.Element
  name: Properties
  nameWithType: Element.Properties
  fullName: Elements.Element.Properties
- uid: Elements.Element.Transform
  commentId: P:Elements.Element.Transform
  parent: Elements.Element
  name: Transform
  nameWithType: Element.Transform
  fullName: Elements.Element.Transform
- uid: Elements.Element.Name
  commentId: P:Elements.Element.Name
  parent: Elements.Element
  name: Name
  nameWithType: Element.Name
  fullName: Elements.Element.Name
- uid: Elements.Element.AddProperty(System.String,Elements.Interfaces.IProperty)
  commentId: M:Elements.Element.AddProperty(System.String,Elements.Interfaces.IProperty)
  parent: Elements.Element
  isExternal: true
  name: AddProperty(String, IProperty)
  nameWithType: Element.AddProperty(String, IProperty)
  fullName: Elements.Element.AddProperty(System.String, Elements.Interfaces.IProperty)
  spec.csharp:
  - uid: Elements.Element.AddProperty(System.String,Elements.Interfaces.IProperty)
    name: AddProperty
    nameWithType: Element.AddProperty
    fullName: Elements.Element.AddProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Elements.Interfaces.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Elements.Interfaces.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Elements.Element.AddProperty(System.String,Elements.Interfaces.IProperty)
    name: AddProperty
    nameWithType: Element.AddProperty
    fullName: Elements.Element.AddProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Elements.Interfaces.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Elements.Interfaces.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Element.RemoveProperty(System.String)
  commentId: M:Elements.Element.RemoveProperty(System.String)
  parent: Elements.Element
  isExternal: true
  name: RemoveProperty(String)
  nameWithType: Element.RemoveProperty(String)
  fullName: Elements.Element.RemoveProperty(System.String)
  spec.csharp:
  - uid: Elements.Element.RemoveProperty(System.String)
    name: RemoveProperty
    nameWithType: Element.RemoveProperty
    fullName: Elements.Element.RemoveProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Elements.Element.RemoveProperty(System.String)
    name: RemoveProperty
    nameWithType: Element.RemoveProperty
    fullName: Elements.Element.RemoveProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.Interfaces
  commentId: N:Elements.Interfaces
  name: Elements.Interfaces
  nameWithType: Elements.Interfaces
  fullName: Elements.Interfaces
- uid: Elements.Geometry.Interfaces
  commentId: N:Elements.Geometry.Interfaces
  name: Elements.Geometry.Interfaces
  nameWithType: Elements.Geometry.Interfaces
  fullName: Elements.Geometry.Interfaces
- uid: Elements.Interfaces.IElementType`1
  commentId: T:Elements.Interfaces.IElementType`1
  name: IElementType<TElementType>
  nameWithType: IElementType<TElementType>
  fullName: Elements.Interfaces.IElementType<TElementType>
  nameWithType.vb: IElementType(Of TElementType)
  fullName.vb: Elements.Interfaces.IElementType(Of TElementType)
  name.vb: IElementType(Of TElementType)
  spec.csharp:
  - uid: Elements.Interfaces.IElementType`1
    name: IElementType
    nameWithType: IElementType
    fullName: Elements.Interfaces.IElementType
  - name: <
    nameWithType: <
    fullName: <
  - name: TElementType
    nameWithType: TElementType
    fullName: TElementType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Elements.Interfaces.IElementType`1
    name: IElementType
    nameWithType: IElementType
    fullName: Elements.Interfaces.IElementType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElementType
    nameWithType: TElementType
    fullName: TElementType
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Beam.#ctor*
  commentId: Overload:Elements.Beam.#ctor
  name: Beam
  nameWithType: Beam.Beam
  fullName: Elements.Beam.Beam
- uid: Elements.Geometry.Interfaces.ICurve
  commentId: T:Elements.Geometry.Interfaces.ICurve
  parent: Elements.Geometry.Interfaces
  name: ICurve
  nameWithType: ICurve
  fullName: Elements.Geometry.Interfaces.ICurve
- uid: Elements.StructuralFramingType
  commentId: T:Elements.StructuralFramingType
  parent: Elements
  name: StructuralFramingType
  nameWithType: StructuralFramingType
  fullName: Elements.StructuralFramingType
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Elements.Geometry.Transform
  commentId: T:Elements.Geometry.Transform
  parent: Elements.Geometry
  name: Transform
  nameWithType: Transform
  fullName: Elements.Geometry.Transform
- uid: Elements.Geometry
  commentId: N:Elements.Geometry
  name: Elements.Geometry
  nameWithType: Elements.Geometry
  fullName: Elements.Geometry
