### YamlMime:ManagedReference
items:
- uid: Elements.Geometry.Color
  commentId: T:Elements.Geometry.Color
  id: Color
  parent: Elements.Geometry
  children:
  - Elements.Geometry.Color.#ctor(System.Single,System.Single,System.Single,System.Single)
  - Elements.Geometry.Color.Alpha
  - Elements.Geometry.Color.Blue
  - Elements.Geometry.Color.Equals(System.Object)
  - Elements.Geometry.Color.GetHashCode
  - Elements.Geometry.Color.Green
  - Elements.Geometry.Color.Red
  - Elements.Geometry.Color.ToArray
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Color
  fullName: Elements.Geometry.Color
  type: Class
  source:
    remote:
      path: src/Elements/Geometry/Color.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Color
    path: ../src/Elements/Geometry/Color.cs
    startLine: 9
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nColor represents an RGBA color.\n"
  example: []
  syntax:
    content: public class Color
    content.vb: Public Class Color
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Elements.Geometry.Color.Red
  commentId: P:Elements.Geometry.Color.Red
  id: Red
  parent: Elements.Geometry.Color
  langs:
  - csharp
  - vb
  name: Red
  nameWithType: Color.Red
  fullName: Elements.Geometry.Color.Red
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Color.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Red
    path: ../src/Elements/Geometry/Color.cs
    startLine: 14
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe red component of the color.\n"
  example: []
  syntax:
    content: public float Red { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Red As Single
  overload: Elements.Geometry.Color.Red*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Color.Green
  commentId: P:Elements.Geometry.Color.Green
  id: Green
  parent: Elements.Geometry.Color
  langs:
  - csharp
  - vb
  name: Green
  nameWithType: Color.Green
  fullName: Elements.Geometry.Color.Green
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Color.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Green
    path: ../src/Elements/Geometry/Color.cs
    startLine: 19
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe green component of the color.\n"
  example: []
  syntax:
    content: public float Green { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Green As Single
  overload: Elements.Geometry.Color.Green*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Color.Blue
  commentId: P:Elements.Geometry.Color.Blue
  id: Blue
  parent: Elements.Geometry.Color
  langs:
  - csharp
  - vb
  name: Blue
  nameWithType: Color.Blue
  fullName: Elements.Geometry.Color.Blue
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Color.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Blue
    path: ../src/Elements/Geometry/Color.cs
    startLine: 24
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe blue component of the color.\n"
  example: []
  syntax:
    content: public float Blue { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Blue As Single
  overload: Elements.Geometry.Color.Blue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Color.Alpha
  commentId: P:Elements.Geometry.Color.Alpha
  id: Alpha
  parent: Elements.Geometry.Color
  langs:
  - csharp
  - vb
  name: Alpha
  nameWithType: Color.Alpha
  fullName: Elements.Geometry.Color.Alpha
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Color.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Alpha
    path: ../src/Elements/Geometry/Color.cs
    startLine: 29
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nThe alpha component of the color.\n"
  example: []
  syntax:
    content: public float Alpha { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Alpha As Single
  overload: Elements.Geometry.Color.Alpha*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Color.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Elements.Geometry.Color.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: Elements.Geometry.Color
  langs:
  - csharp
  - vb
  name: Color(Single, Single, Single, Single)
  nameWithType: Color.Color(Single, Single, Single, Single)
  fullName: Elements.Geometry.Color.Color(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/Elements/Geometry/Color.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Geometry/Color.cs
    startLine: 40
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nConstruct a color from its components.\n"
  example: []
  syntax:
    content: public Color(float red, float green, float blue, float alpha)
    parameters:
    - id: red
      type: System.Single
      description: The red component between 0.0 and 1.0.
    - id: green
      type: System.Single
      description: The green component between 0.0 and 1.0.
    - id: blue
      type: System.Single
      description: The blue component between 0.0 and 1.0.
    - id: alpha
      type: System.Single
      description: The alpha component between 0.0 and 1.0.
    content.vb: Public Sub New(red As Single, green As Single, blue As Single, alpha As Single)
  overload: Elements.Geometry.Color.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown when any color component is less than 0.0.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown when any color component is greater than 1.0.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Geometry.Color.ToArray
  commentId: M:Elements.Geometry.Color.ToArray
  id: ToArray
  parent: Elements.Geometry.Color
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: Color.ToArray()
  fullName: Elements.Geometry.Color.ToArray()
  type: Method
  source:
    remote:
      path: src/Elements/Geometry/Color.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: ToArray
    path: ../src/Elements/Geometry/Color.cs
    startLine: 62
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nGet the color&apos;s components as an array.\n"
  example: []
  syntax:
    content: public float[] ToArray()
    return:
      type: System.Single[]
      description: An array containing the color&apos;s components.
    content.vb: Public Function ToArray As Single()
  overload: Elements.Geometry.Color.ToArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Geometry.Color.Equals(System.Object)
  commentId: M:Elements.Geometry.Color.Equals(System.Object)
  id: Equals(System.Object)
  parent: Elements.Geometry.Color
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Color.Equals(Object)
  fullName: Elements.Geometry.Color.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Elements/Geometry/Color.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Equals
    path: ../src/Elements/Geometry/Color.cs
    startLine: 72
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nIs this color equal to the provided color?\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Elements.Geometry.Color.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Elements.Geometry.Color.GetHashCode
  commentId: M:Elements.Geometry.Color.GetHashCode
  id: GetHashCode
  parent: Elements.Geometry.Color
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Color.GetHashCode()
  fullName: Elements.Geometry.Color.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Elements/Geometry/Color.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: GetHashCode
    path: ../src/Elements/Geometry/Color.cs
    startLine: 87
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nGet the hash code for this color.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Elements.Geometry.Color.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Elements.Geometry
  commentId: N:Elements.Geometry
  name: Elements.Geometry
  nameWithType: Elements.Geometry
  fullName: Elements.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.Geometry.Color.Red*
  commentId: Overload:Elements.Geometry.Color.Red
  name: Red
  nameWithType: Color.Red
  fullName: Elements.Geometry.Color.Red
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Elements.Geometry.Color.Green*
  commentId: Overload:Elements.Geometry.Color.Green
  name: Green
  nameWithType: Color.Green
  fullName: Elements.Geometry.Color.Green
- uid: Elements.Geometry.Color.Blue*
  commentId: Overload:Elements.Geometry.Color.Blue
  name: Blue
  nameWithType: Color.Blue
  fullName: Elements.Geometry.Color.Blue
- uid: Elements.Geometry.Color.Alpha*
  commentId: Overload:Elements.Geometry.Color.Alpha
  name: Alpha
  nameWithType: Color.Alpha
  fullName: Elements.Geometry.Color.Alpha
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: Elements.Geometry.Color.#ctor*
  commentId: Overload:Elements.Geometry.Color.#ctor
  name: Color
  nameWithType: Color.Color
  fullName: Elements.Geometry.Color.Color
- uid: Elements.Geometry.Color.ToArray*
  commentId: Overload:Elements.Geometry.Color.ToArray
  name: ToArray
  nameWithType: Color.ToArray
  fullName: Elements.Geometry.Color.ToArray
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Geometry.Color.Equals*
  commentId: Overload:Elements.Geometry.Color.Equals
  name: Equals
  nameWithType: Color.Equals
  fullName: Elements.Geometry.Color.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Geometry.Color.GetHashCode*
  commentId: Overload:Elements.Geometry.Color.GetHashCode
  name: GetHashCode
  nameWithType: Color.GetHashCode
  fullName: Elements.Geometry.Color.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
