### YamlMime:ManagedReference
items:
- uid: Elements.Material
  commentId: T:Elements.Material
  id: Material
  parent: Elements
  children:
  - Elements.Material.#ctor(System.String)
  - Elements.Material.#ctor(System.String,Elements.Geometry.Color,System.Single,System.Single,System.Boolean)
  - Elements.Material.Color
  - Elements.Material.DoubleSided
  - Elements.Material.Equals(System.Object)
  - Elements.Material.GetHashCode
  - Elements.Material.GlossinessFactor
  - Elements.Material.Id
  - Elements.Material.Name
  - Elements.Material.SpecularFactor
  langs:
  - csharp
  - vb
  name: Material
  nameWithType: Material
  fullName: Elements.Material
  type: Class
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Material
    path: ../src/Elements/Material.cs
    startLine: 12
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nA material with red, green, blue, alpha, and metallic factor components.\n"
  example: []
  syntax:
    content: 'public class Material : IIdentifiable'
    content.vb: >-
      Public Class Material
          Implements IIdentifiable
  inheritance:
  - System.Object
  implements:
  - Elements.Interfaces.IIdentifiable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Elements.Material.Id
  commentId: P:Elements.Material.Id
  id: Id
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Material.Id
  fullName: Elements.Material.Id
  type: Property
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Id
    path: ../src/Elements/Material.cs
    startLine: 17
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nThe unique identifier of the material.\n"
  example: []
  syntax:
    content: public long Id { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Id As Long
  overload: Elements.Material.Id*
  implements:
  - Elements.Interfaces.IIdentifiable.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Material.Color
  commentId: P:Elements.Material.Color
  id: Color
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Material.Color
  fullName: Elements.Material.Color
  type: Property
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Color
    path: ../src/Elements/Material.cs
    startLine: 22
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nThe RGBA Color of the material.\n"
  example: []
  syntax:
    content: public Color Color { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public ReadOnly Property Color As Color
  overload: Elements.Material.Color*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Material.SpecularFactor
  commentId: P:Elements.Material.SpecularFactor
  id: SpecularFactor
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: SpecularFactor
  nameWithType: Material.SpecularFactor
  fullName: Elements.Material.SpecularFactor
  type: Property
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: SpecularFactor
    path: ../src/Elements/Material.cs
    startLine: 27
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nThe specular factor.\n"
  example: []
  syntax:
    content: public float SpecularFactor { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property SpecularFactor As Single
  overload: Elements.Material.SpecularFactor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Material.GlossinessFactor
  commentId: P:Elements.Material.GlossinessFactor
  id: GlossinessFactor
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: GlossinessFactor
  nameWithType: Material.GlossinessFactor
  fullName: Elements.Material.GlossinessFactor
  type: Property
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: GlossinessFactor
    path: ../src/Elements/Material.cs
    startLine: 32
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nThe glossiness factor.\n"
  example: []
  syntax:
    content: public float GlossinessFactor { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property GlossinessFactor As Single
  overload: Elements.Material.GlossinessFactor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Material.Name
  commentId: P:Elements.Material.Name
  id: Name
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Material.Name
  fullName: Elements.Material.Name
  type: Property
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Name
    path: ../src/Elements/Material.cs
    startLine: 37
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nThe name of the material.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Elements.Material.Name*
  implements:
  - Elements.Interfaces.IIdentifiable.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Material.DoubleSided
  commentId: P:Elements.Material.DoubleSided
  id: DoubleSided
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: DoubleSided
  nameWithType: Material.DoubleSided
  fullName: Elements.Material.DoubleSided
  type: Property
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: DoubleSided
    path: ../src/Elements/Material.cs
    startLine: 42
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nIs the material double sided?\n"
  example: []
  syntax:
    content: public bool DoubleSided { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DoubleSided As Boolean
  overload: Elements.Material.DoubleSided*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Material.#ctor(System.String)
  commentId: M:Elements.Material.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: Material(String)
  nameWithType: Material.Material(String)
  fullName: Elements.Material.Material(System.String)
  type: Constructor
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Material.cs
    startLine: 48
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nConstruct a material.\n"
  example: []
  syntax:
    content: public Material(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    content.vb: Public Sub New(name As String)
  overload: Elements.Material.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Material.#ctor(System.String,Elements.Geometry.Color,System.Single,System.Single,System.Boolean)
  commentId: M:Elements.Material.#ctor(System.String,Elements.Geometry.Color,System.Single,System.Single,System.Boolean)
  id: '#ctor(System.String,Elements.Geometry.Color,System.Single,System.Single,System.Boolean)'
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: Material(String, Color, Single, Single, Boolean)
  nameWithType: Material.Material(String, Color, Single, Single, Boolean)
  fullName: Elements.Material.Material(System.String, Elements.Geometry.Color, System.Single, System.Single, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Material.cs
    startLine: 64
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nConstruct a material.\n"
  example: []
  syntax:
    content: >-
      [JsonConstructor]

      public Material(string name, Color color, float specularFactor = 0.1F, float glossinessFactor = 0.1F, bool doubleSided = false)
    parameters:
    - id: name
      type: System.String
      description: The identifier of the material. Identifiers should be unique within a model.
    - id: color
      type: Elements.Geometry.Color
      description: The RGBA color of the material.
    - id: specularFactor
      type: System.Single
      description: The specular component of the color. Between 0.0 and 1.0.
    - id: glossinessFactor
      type: System.Single
      description: The glossiness component of the color. Between 0.0 and 1.0.
    - id: doubleSided
      type: System.Boolean
      description: Is the material double sided?
    content.vb: >-
      <JsonConstructor>

      Public Sub New(name As String, color As Color, specularFactor As Single = 0.1F, glossinessFactor As Single = 0.1F, doubleSided As Boolean = False)
  overload: Elements.Material.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown when the specular or glossiness value is less than 0.0.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown when the specular or glossiness value is greater than 1.0.
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Material.Equals(System.Object)
  commentId: M:Elements.Material.Equals(System.Object)
  id: Equals(System.Object)
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Material.Equals(Object)
  fullName: Elements.Material.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Equals
    path: ../src/Elements/Material.cs
    startLine: 89
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nIs this material equal to the provided material?\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Elements.Material.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Elements.Material.GetHashCode
  commentId: M:Elements.Material.GetHashCode
  id: GetHashCode
  parent: Elements.Material
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Material.GetHashCode()
  fullName: Elements.Material.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Elements/Material.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: GetHashCode
    path: ../src/Elements/Material.cs
    startLine: 103
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nGet the hash code for the material.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Elements.Material.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Elements
  commentId: N:Elements
  name: Elements
  nameWithType: Elements
  fullName: Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Elements.Interfaces.IIdentifiable
  commentId: T:Elements.Interfaces.IIdentifiable
  parent: Elements.Interfaces
  name: IIdentifiable
  nameWithType: IIdentifiable
  fullName: Elements.Interfaces.IIdentifiable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.Interfaces
  commentId: N:Elements.Interfaces
  name: Elements.Interfaces
  nameWithType: Elements.Interfaces
  fullName: Elements.Interfaces
- uid: Elements.Material.Id*
  commentId: Overload:Elements.Material.Id
  name: Id
  nameWithType: Material.Id
  fullName: Elements.Material.Id
- uid: Elements.Interfaces.IIdentifiable.Id
  commentId: P:Elements.Interfaces.IIdentifiable.Id
  parent: Elements.Interfaces.IIdentifiable
  name: Id
  nameWithType: IIdentifiable.Id
  fullName: Elements.Interfaces.IIdentifiable.Id
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Elements.Material.Color*
  commentId: Overload:Elements.Material.Color
  name: Color
  nameWithType: Material.Color
  fullName: Elements.Material.Color
- uid: Elements.Geometry.Color
  commentId: T:Elements.Geometry.Color
  parent: Elements.Geometry
  name: Color
  nameWithType: Color
  fullName: Elements.Geometry.Color
- uid: Elements.Geometry
  commentId: N:Elements.Geometry
  name: Elements.Geometry
  nameWithType: Elements.Geometry
  fullName: Elements.Geometry
- uid: Elements.Material.SpecularFactor*
  commentId: Overload:Elements.Material.SpecularFactor
  name: SpecularFactor
  nameWithType: Material.SpecularFactor
  fullName: Elements.Material.SpecularFactor
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Elements.Material.GlossinessFactor*
  commentId: Overload:Elements.Material.GlossinessFactor
  name: GlossinessFactor
  nameWithType: Material.GlossinessFactor
  fullName: Elements.Material.GlossinessFactor
- uid: Elements.Material.Name*
  commentId: Overload:Elements.Material.Name
  name: Name
  nameWithType: Material.Name
  fullName: Elements.Material.Name
- uid: Elements.Interfaces.IIdentifiable.Name
  commentId: P:Elements.Interfaces.IIdentifiable.Name
  parent: Elements.Interfaces.IIdentifiable
  name: Name
  nameWithType: IIdentifiable.Name
  fullName: Elements.Interfaces.IIdentifiable.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Elements.Material.DoubleSided*
  commentId: Overload:Elements.Material.DoubleSided
  name: DoubleSided
  nameWithType: Material.DoubleSided
  fullName: Elements.Material.DoubleSided
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Elements.Material.#ctor*
  commentId: Overload:Elements.Material.#ctor
  name: Material
  nameWithType: Material.Material
  fullName: Elements.Material.Material
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Material.Equals*
  commentId: Overload:Elements.Material.Equals
  name: Equals
  nameWithType: Material.Equals
  fullName: Elements.Material.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Elements.Material.GetHashCode*
  commentId: Overload:Elements.Material.GetHashCode
  name: GetHashCode
  nameWithType: Material.GetHashCode
  fullName: Elements.Material.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
