### YamlMime:ManagedReference
items:
- uid: Elements.Geometry.Colors
  commentId: T:Elements.Geometry.Colors
  id: Colors
  parent: Elements.Geometry
  children:
  - Elements.Geometry.Colors.Aqua
  - Elements.Geometry.Colors.Beige
  - Elements.Geometry.Colors.Black
  - Elements.Geometry.Colors.Blue
  - Elements.Geometry.Colors.Brown
  - Elements.Geometry.Colors.Cobalt
  - Elements.Geometry.Colors.Coral
  - Elements.Geometry.Colors.Crimson
  - Elements.Geometry.Colors.Cyan
  - Elements.Geometry.Colors.Darkgray
  - Elements.Geometry.Colors.Emerald
  - Elements.Geometry.Colors.Granite
  - Elements.Geometry.Colors.Gray
  - Elements.Geometry.Colors.Green
  - Elements.Geometry.Colors.Lavender
  - Elements.Geometry.Colors.Lime
  - Elements.Geometry.Colors.Magenta
  - Elements.Geometry.Colors.Maroon
  - Elements.Geometry.Colors.Mint
  - Elements.Geometry.Colors.Navy
  - Elements.Geometry.Colors.Olive
  - Elements.Geometry.Colors.Orange
  - Elements.Geometry.Colors.Pink
  - Elements.Geometry.Colors.Purple
  - Elements.Geometry.Colors.Red
  - Elements.Geometry.Colors.Sand
  - Elements.Geometry.Colors.Stone
  - Elements.Geometry.Colors.Teal
  - Elements.Geometry.Colors.White
  - Elements.Geometry.Colors.Yellow
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: Colors
  fullName: Elements.Geometry.Colors
  type: Class
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Colors
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 5
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nCommonly used Colors.\n"
  example: []
  syntax:
    content: public static class Colors
    content.vb: Public Module Colors
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Elements.Geometry.Colors.Red
  commentId: P:Elements.Geometry.Colors.Red
  id: Red
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Red
  nameWithType: Colors.Red
  fullName: Elements.Geometry.Colors.Red
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Red
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 10
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nRed\n"
  example: []
  syntax:
    content: public static Color Red { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Red As Color
  overload: Elements.Geometry.Colors.Red*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Blue
  commentId: P:Elements.Geometry.Colors.Blue
  id: Blue
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Blue
  nameWithType: Colors.Blue
  fullName: Elements.Geometry.Colors.Blue
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Blue
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 15
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nBlue\n"
  example: []
  syntax:
    content: public static Color Blue { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Blue As Color
  overload: Elements.Geometry.Colors.Blue*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Green
  commentId: P:Elements.Geometry.Colors.Green
  id: Green
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Green
  nameWithType: Colors.Green
  fullName: Elements.Geometry.Colors.Green
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Green
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 20
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nGreen\n"
  example: []
  syntax:
    content: public static Color Green { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Green As Color
  overload: Elements.Geometry.Colors.Green*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Aqua
  commentId: P:Elements.Geometry.Colors.Aqua
  id: Aqua
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Aqua
  nameWithType: Colors.Aqua
  fullName: Elements.Geometry.Colors.Aqua
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Aqua
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 25
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nAqua\n"
  example: []
  syntax:
    content: public static Color Aqua { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Aqua As Color
  overload: Elements.Geometry.Colors.Aqua*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Beige
  commentId: P:Elements.Geometry.Colors.Beige
  id: Beige
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Beige
  nameWithType: Colors.Beige
  fullName: Elements.Geometry.Colors.Beige
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Beige
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 30
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nBeige\n"
  example: []
  syntax:
    content: public static Color Beige { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Beige As Color
  overload: Elements.Geometry.Colors.Beige*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Black
  commentId: P:Elements.Geometry.Colors.Black
  id: Black
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Black
  nameWithType: Colors.Black
  fullName: Elements.Geometry.Colors.Black
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Black
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 35
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nBlack\n"
  example: []
  syntax:
    content: public static Color Black { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Black As Color
  overload: Elements.Geometry.Colors.Black*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Brown
  commentId: P:Elements.Geometry.Colors.Brown
  id: Brown
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Brown
  nameWithType: Colors.Brown
  fullName: Elements.Geometry.Colors.Brown
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Brown
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 40
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nBrown\n"
  example: []
  syntax:
    content: public static Color Brown { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Brown As Color
  overload: Elements.Geometry.Colors.Brown*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Cobalt
  commentId: P:Elements.Geometry.Colors.Cobalt
  id: Cobalt
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Cobalt
  nameWithType: Colors.Cobalt
  fullName: Elements.Geometry.Colors.Cobalt
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Cobalt
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 45
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nCobalt\n"
  example: []
  syntax:
    content: public static Color Cobalt { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Cobalt As Color
  overload: Elements.Geometry.Colors.Cobalt*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Coral
  commentId: P:Elements.Geometry.Colors.Coral
  id: Coral
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Coral
  nameWithType: Colors.Coral
  fullName: Elements.Geometry.Colors.Coral
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Coral
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 50
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nCoral\n"
  example: []
  syntax:
    content: public static Color Coral { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Coral As Color
  overload: Elements.Geometry.Colors.Coral*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Crimson
  commentId: P:Elements.Geometry.Colors.Crimson
  id: Crimson
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Crimson
  nameWithType: Colors.Crimson
  fullName: Elements.Geometry.Colors.Crimson
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Crimson
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 55
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nCrimson\n"
  example: []
  syntax:
    content: public static Color Crimson { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Crimson As Color
  overload: Elements.Geometry.Colors.Crimson*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Cyan
  commentId: P:Elements.Geometry.Colors.Cyan
  id: Cyan
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Cyan
  nameWithType: Colors.Cyan
  fullName: Elements.Geometry.Colors.Cyan
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Cyan
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 60
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nCyan\n"
  example: []
  syntax:
    content: public static Color Cyan { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Cyan As Color
  overload: Elements.Geometry.Colors.Cyan*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Darkgray
  commentId: P:Elements.Geometry.Colors.Darkgray
  id: Darkgray
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Darkgray
  nameWithType: Colors.Darkgray
  fullName: Elements.Geometry.Colors.Darkgray
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Darkgray
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 65
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nDark Gray\n"
  example: []
  syntax:
    content: public static Color Darkgray { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Darkgray As Color
  overload: Elements.Geometry.Colors.Darkgray*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Emerald
  commentId: P:Elements.Geometry.Colors.Emerald
  id: Emerald
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Emerald
  nameWithType: Colors.Emerald
  fullName: Elements.Geometry.Colors.Emerald
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Emerald
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 70
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nEmerald\n"
  example: []
  syntax:
    content: public static Color Emerald { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Emerald As Color
  overload: Elements.Geometry.Colors.Emerald*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Granite
  commentId: P:Elements.Geometry.Colors.Granite
  id: Granite
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Granite
  nameWithType: Colors.Granite
  fullName: Elements.Geometry.Colors.Granite
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Granite
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 75
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nGranite\n"
  example: []
  syntax:
    content: public static Color Granite { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Granite As Color
  overload: Elements.Geometry.Colors.Granite*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Gray
  commentId: P:Elements.Geometry.Colors.Gray
  id: Gray
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Gray
  nameWithType: Colors.Gray
  fullName: Elements.Geometry.Colors.Gray
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Gray
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 80
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nGray\n"
  example: []
  syntax:
    content: public static Color Gray { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Gray As Color
  overload: Elements.Geometry.Colors.Gray*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Lavender
  commentId: P:Elements.Geometry.Colors.Lavender
  id: Lavender
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Lavender
  nameWithType: Colors.Lavender
  fullName: Elements.Geometry.Colors.Lavender
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Lavender
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 85
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nLavender\n"
  example: []
  syntax:
    content: public static Color Lavender { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Lavender As Color
  overload: Elements.Geometry.Colors.Lavender*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Lime
  commentId: P:Elements.Geometry.Colors.Lime
  id: Lime
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Lime
  nameWithType: Colors.Lime
  fullName: Elements.Geometry.Colors.Lime
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Lime
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 90
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nLime\n"
  example: []
  syntax:
    content: public static Color Lime { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Lime As Color
  overload: Elements.Geometry.Colors.Lime*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Magenta
  commentId: P:Elements.Geometry.Colors.Magenta
  id: Magenta
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Magenta
  nameWithType: Colors.Magenta
  fullName: Elements.Geometry.Colors.Magenta
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Magenta
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 95
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nMagenta\n"
  example: []
  syntax:
    content: public static Color Magenta { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Magenta As Color
  overload: Elements.Geometry.Colors.Magenta*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Maroon
  commentId: P:Elements.Geometry.Colors.Maroon
  id: Maroon
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Maroon
  nameWithType: Colors.Maroon
  fullName: Elements.Geometry.Colors.Maroon
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Maroon
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 100
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nMaroon\n"
  example: []
  syntax:
    content: public static Color Maroon { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Maroon As Color
  overload: Elements.Geometry.Colors.Maroon*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Mint
  commentId: P:Elements.Geometry.Colors.Mint
  id: Mint
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Mint
  nameWithType: Colors.Mint
  fullName: Elements.Geometry.Colors.Mint
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Mint
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 105
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nMint\n"
  example: []
  syntax:
    content: public static Color Mint { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Mint As Color
  overload: Elements.Geometry.Colors.Mint*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Navy
  commentId: P:Elements.Geometry.Colors.Navy
  id: Navy
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Navy
  nameWithType: Colors.Navy
  fullName: Elements.Geometry.Colors.Navy
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Navy
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 110
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nNavy\n"
  example: []
  syntax:
    content: public static Color Navy { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Navy As Color
  overload: Elements.Geometry.Colors.Navy*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Olive
  commentId: P:Elements.Geometry.Colors.Olive
  id: Olive
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Olive
  nameWithType: Colors.Olive
  fullName: Elements.Geometry.Colors.Olive
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Olive
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 115
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nOlive\n"
  example: []
  syntax:
    content: public static Color Olive { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Olive As Color
  overload: Elements.Geometry.Colors.Olive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Orange
  commentId: P:Elements.Geometry.Colors.Orange
  id: Orange
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Orange
  nameWithType: Colors.Orange
  fullName: Elements.Geometry.Colors.Orange
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Orange
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 120
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nOrange\n"
  example: []
  syntax:
    content: public static Color Orange { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Orange As Color
  overload: Elements.Geometry.Colors.Orange*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Pink
  commentId: P:Elements.Geometry.Colors.Pink
  id: Pink
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Pink
  nameWithType: Colors.Pink
  fullName: Elements.Geometry.Colors.Pink
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Pink
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 125
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nPink\n"
  example: []
  syntax:
    content: public static Color Pink { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Pink As Color
  overload: Elements.Geometry.Colors.Pink*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Purple
  commentId: P:Elements.Geometry.Colors.Purple
  id: Purple
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Purple
  nameWithType: Colors.Purple
  fullName: Elements.Geometry.Colors.Purple
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Purple
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 130
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nPurple\n"
  example: []
  syntax:
    content: public static Color Purple { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Purple As Color
  overload: Elements.Geometry.Colors.Purple*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Sand
  commentId: P:Elements.Geometry.Colors.Sand
  id: Sand
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Sand
  nameWithType: Colors.Sand
  fullName: Elements.Geometry.Colors.Sand
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Sand
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 135
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nSand\n"
  example: []
  syntax:
    content: public static Color Sand { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Sand As Color
  overload: Elements.Geometry.Colors.Sand*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Stone
  commentId: P:Elements.Geometry.Colors.Stone
  id: Stone
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Stone
  nameWithType: Colors.Stone
  fullName: Elements.Geometry.Colors.Stone
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Stone
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 140
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nStone\n"
  example: []
  syntax:
    content: public static Color Stone { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Stone As Color
  overload: Elements.Geometry.Colors.Stone*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Teal
  commentId: P:Elements.Geometry.Colors.Teal
  id: Teal
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Teal
  nameWithType: Colors.Teal
  fullName: Elements.Geometry.Colors.Teal
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Teal
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 145
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nTeal\n"
  example: []
  syntax:
    content: public static Color Teal { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Teal As Color
  overload: Elements.Geometry.Colors.Teal*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.White
  commentId: P:Elements.Geometry.Colors.White
  id: White
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: White
  nameWithType: Colors.White
  fullName: Elements.Geometry.Colors.White
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: White
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 150
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nWhite\n"
  example: []
  syntax:
    content: public static Color White { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property White As Color
  overload: Elements.Geometry.Colors.White*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.Geometry.Colors.Yellow
  commentId: P:Elements.Geometry.Colors.Yellow
  id: Yellow
  parent: Elements.Geometry.Colors
  langs:
  - csharp
  - vb
  name: Yellow
  nameWithType: Colors.Yellow
  fullName: Elements.Geometry.Colors.Yellow
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Colors.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Yellow
    path: ../src/Elements/Geometry/Colors.cs
    startLine: 155
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry
  summary: "\nYellow\n"
  example: []
  syntax:
    content: public static Color Yellow { get; }
    parameters: []
    return:
      type: Elements.Geometry.Color
    content.vb: Public Shared ReadOnly Property Yellow As Color
  overload: Elements.Geometry.Colors.Yellow*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Elements.Geometry
  commentId: N:Elements.Geometry
  name: Elements.Geometry
  nameWithType: Elements.Geometry
  fullName: Elements.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.Geometry.Colors.Red*
  commentId: Overload:Elements.Geometry.Colors.Red
  name: Red
  nameWithType: Colors.Red
  fullName: Elements.Geometry.Colors.Red
- uid: Elements.Geometry.Color
  commentId: T:Elements.Geometry.Color
  parent: Elements.Geometry
  name: Color
  nameWithType: Color
  fullName: Elements.Geometry.Color
- uid: Elements.Geometry.Colors.Blue*
  commentId: Overload:Elements.Geometry.Colors.Blue
  name: Blue
  nameWithType: Colors.Blue
  fullName: Elements.Geometry.Colors.Blue
- uid: Elements.Geometry.Colors.Green*
  commentId: Overload:Elements.Geometry.Colors.Green
  name: Green
  nameWithType: Colors.Green
  fullName: Elements.Geometry.Colors.Green
- uid: Elements.Geometry.Colors.Aqua*
  commentId: Overload:Elements.Geometry.Colors.Aqua
  name: Aqua
  nameWithType: Colors.Aqua
  fullName: Elements.Geometry.Colors.Aqua
- uid: Elements.Geometry.Colors.Beige*
  commentId: Overload:Elements.Geometry.Colors.Beige
  name: Beige
  nameWithType: Colors.Beige
  fullName: Elements.Geometry.Colors.Beige
- uid: Elements.Geometry.Colors.Black*
  commentId: Overload:Elements.Geometry.Colors.Black
  name: Black
  nameWithType: Colors.Black
  fullName: Elements.Geometry.Colors.Black
- uid: Elements.Geometry.Colors.Brown*
  commentId: Overload:Elements.Geometry.Colors.Brown
  name: Brown
  nameWithType: Colors.Brown
  fullName: Elements.Geometry.Colors.Brown
- uid: Elements.Geometry.Colors.Cobalt*
  commentId: Overload:Elements.Geometry.Colors.Cobalt
  name: Cobalt
  nameWithType: Colors.Cobalt
  fullName: Elements.Geometry.Colors.Cobalt
- uid: Elements.Geometry.Colors.Coral*
  commentId: Overload:Elements.Geometry.Colors.Coral
  name: Coral
  nameWithType: Colors.Coral
  fullName: Elements.Geometry.Colors.Coral
- uid: Elements.Geometry.Colors.Crimson*
  commentId: Overload:Elements.Geometry.Colors.Crimson
  name: Crimson
  nameWithType: Colors.Crimson
  fullName: Elements.Geometry.Colors.Crimson
- uid: Elements.Geometry.Colors.Cyan*
  commentId: Overload:Elements.Geometry.Colors.Cyan
  name: Cyan
  nameWithType: Colors.Cyan
  fullName: Elements.Geometry.Colors.Cyan
- uid: Elements.Geometry.Colors.Darkgray*
  commentId: Overload:Elements.Geometry.Colors.Darkgray
  name: Darkgray
  nameWithType: Colors.Darkgray
  fullName: Elements.Geometry.Colors.Darkgray
- uid: Elements.Geometry.Colors.Emerald*
  commentId: Overload:Elements.Geometry.Colors.Emerald
  name: Emerald
  nameWithType: Colors.Emerald
  fullName: Elements.Geometry.Colors.Emerald
- uid: Elements.Geometry.Colors.Granite*
  commentId: Overload:Elements.Geometry.Colors.Granite
  name: Granite
  nameWithType: Colors.Granite
  fullName: Elements.Geometry.Colors.Granite
- uid: Elements.Geometry.Colors.Gray*
  commentId: Overload:Elements.Geometry.Colors.Gray
  name: Gray
  nameWithType: Colors.Gray
  fullName: Elements.Geometry.Colors.Gray
- uid: Elements.Geometry.Colors.Lavender*
  commentId: Overload:Elements.Geometry.Colors.Lavender
  name: Lavender
  nameWithType: Colors.Lavender
  fullName: Elements.Geometry.Colors.Lavender
- uid: Elements.Geometry.Colors.Lime*
  commentId: Overload:Elements.Geometry.Colors.Lime
  name: Lime
  nameWithType: Colors.Lime
  fullName: Elements.Geometry.Colors.Lime
- uid: Elements.Geometry.Colors.Magenta*
  commentId: Overload:Elements.Geometry.Colors.Magenta
  name: Magenta
  nameWithType: Colors.Magenta
  fullName: Elements.Geometry.Colors.Magenta
- uid: Elements.Geometry.Colors.Maroon*
  commentId: Overload:Elements.Geometry.Colors.Maroon
  name: Maroon
  nameWithType: Colors.Maroon
  fullName: Elements.Geometry.Colors.Maroon
- uid: Elements.Geometry.Colors.Mint*
  commentId: Overload:Elements.Geometry.Colors.Mint
  name: Mint
  nameWithType: Colors.Mint
  fullName: Elements.Geometry.Colors.Mint
- uid: Elements.Geometry.Colors.Navy*
  commentId: Overload:Elements.Geometry.Colors.Navy
  name: Navy
  nameWithType: Colors.Navy
  fullName: Elements.Geometry.Colors.Navy
- uid: Elements.Geometry.Colors.Olive*
  commentId: Overload:Elements.Geometry.Colors.Olive
  name: Olive
  nameWithType: Colors.Olive
  fullName: Elements.Geometry.Colors.Olive
- uid: Elements.Geometry.Colors.Orange*
  commentId: Overload:Elements.Geometry.Colors.Orange
  name: Orange
  nameWithType: Colors.Orange
  fullName: Elements.Geometry.Colors.Orange
- uid: Elements.Geometry.Colors.Pink*
  commentId: Overload:Elements.Geometry.Colors.Pink
  name: Pink
  nameWithType: Colors.Pink
  fullName: Elements.Geometry.Colors.Pink
- uid: Elements.Geometry.Colors.Purple*
  commentId: Overload:Elements.Geometry.Colors.Purple
  name: Purple
  nameWithType: Colors.Purple
  fullName: Elements.Geometry.Colors.Purple
- uid: Elements.Geometry.Colors.Sand*
  commentId: Overload:Elements.Geometry.Colors.Sand
  name: Sand
  nameWithType: Colors.Sand
  fullName: Elements.Geometry.Colors.Sand
- uid: Elements.Geometry.Colors.Stone*
  commentId: Overload:Elements.Geometry.Colors.Stone
  name: Stone
  nameWithType: Colors.Stone
  fullName: Elements.Geometry.Colors.Stone
- uid: Elements.Geometry.Colors.Teal*
  commentId: Overload:Elements.Geometry.Colors.Teal
  name: Teal
  nameWithType: Colors.Teal
  fullName: Elements.Geometry.Colors.Teal
- uid: Elements.Geometry.Colors.White*
  commentId: Overload:Elements.Geometry.Colors.White
  name: White
  nameWithType: Colors.White
  fullName: Elements.Geometry.Colors.White
- uid: Elements.Geometry.Colors.Yellow*
  commentId: Overload:Elements.Geometry.Colors.Yellow
  name: Yellow
  nameWithType: Colors.Yellow
  fullName: Elements.Geometry.Colors.Yellow
