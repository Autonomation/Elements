### YamlMime:ManagedReference
items:
- uid: Elements.BuiltInMaterials
  commentId: T:Elements.BuiltInMaterials
  id: BuiltInMaterials
  parent: Elements
  children:
  - Elements.BuiltInMaterials.Black
  - Elements.BuiltInMaterials.Concrete
  - Elements.BuiltInMaterials.Default
  - Elements.BuiltInMaterials.Edges
  - Elements.BuiltInMaterials.EdgesHighlighted
  - Elements.BuiltInMaterials.Glass
  - Elements.BuiltInMaterials.Mass
  - Elements.BuiltInMaterials.Steel
  - Elements.BuiltInMaterials.Topography
  - Elements.BuiltInMaterials.Trans
  - Elements.BuiltInMaterials.Void
  - Elements.BuiltInMaterials.Wood
  - Elements.BuiltInMaterials.XAxis
  - Elements.BuiltInMaterials.YAxis
  - Elements.BuiltInMaterials.ZAxis
  langs:
  - csharp
  - vb
  name: BuiltInMaterials
  nameWithType: BuiltInMaterials
  fullName: Elements.BuiltInMaterials
  type: Class
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: BuiltInMaterials
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 7
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nBuilt in materials.\n"
  example: []
  syntax:
    content: public static class BuiltInMaterials
    content.vb: Public Module BuiltInMaterials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Elements.BuiltInMaterials.Glass
  commentId: P:Elements.BuiltInMaterials.Glass
  id: Glass
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Glass
  nameWithType: BuiltInMaterials.Glass
  fullName: Elements.BuiltInMaterials.Glass
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Glass
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 28
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nGlass.\n"
  example: []
  syntax:
    content: public static Material Glass { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Glass As Material
  overload: Elements.BuiltInMaterials.Glass*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.Steel
  commentId: P:Elements.BuiltInMaterials.Steel
  id: Steel
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Steel
  nameWithType: BuiltInMaterials.Steel
  fullName: Elements.BuiltInMaterials.Steel
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Steel
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 33
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nSteel.\n"
  example: []
  syntax:
    content: public static Material Steel { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Steel As Material
  overload: Elements.BuiltInMaterials.Steel*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.Default
  commentId: P:Elements.BuiltInMaterials.Default
  id: Default
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: BuiltInMaterials.Default
  fullName: Elements.BuiltInMaterials.Default
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Default
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 38
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nThe default material.\n"
  example: []
  syntax:
    content: public static Material Default { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Default As Material
  overload: Elements.BuiltInMaterials.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.Concrete
  commentId: F:Elements.BuiltInMaterials.Concrete
  id: Concrete
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Concrete
  nameWithType: BuiltInMaterials.Concrete
  fullName: Elements.BuiltInMaterials.Concrete
  type: Field
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Concrete
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 43
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nConcrete.\n"
  example: []
  syntax:
    content: public static Material Concrete
    return:
      type: Elements.Material
    content.vb: Public Shared Concrete As Material
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Elements.BuiltInMaterials.Mass
  commentId: P:Elements.BuiltInMaterials.Mass
  id: Mass
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Mass
  nameWithType: BuiltInMaterials.Mass
  fullName: Elements.BuiltInMaterials.Mass
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Mass
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 48
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nDefault material used to represent masses.\n"
  example: []
  syntax:
    content: public static Material Mass { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Mass As Material
  overload: Elements.BuiltInMaterials.Mass*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.Wood
  commentId: P:Elements.BuiltInMaterials.Wood
  id: Wood
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Wood
  nameWithType: BuiltInMaterials.Wood
  fullName: Elements.BuiltInMaterials.Wood
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Wood
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 53
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nWood.\n"
  example: []
  syntax:
    content: public static Material Wood { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Wood As Material
  overload: Elements.BuiltInMaterials.Wood*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.Black
  commentId: P:Elements.BuiltInMaterials.Black
  id: Black
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Black
  nameWithType: BuiltInMaterials.Black
  fullName: Elements.BuiltInMaterials.Black
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Black
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 58
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nBlack\n"
  example: []
  syntax:
    content: public static Material Black { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Black As Material
  overload: Elements.BuiltInMaterials.Black*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.Edges
  commentId: P:Elements.BuiltInMaterials.Edges
  id: Edges
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Edges
  nameWithType: BuiltInMaterials.Edges
  fullName: Elements.BuiltInMaterials.Edges
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Edges
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 63
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nEdges\n"
  example: []
  syntax:
    content: public static Material Edges { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Edges As Material
  overload: Elements.BuiltInMaterials.Edges*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.Topography
  commentId: P:Elements.BuiltInMaterials.Topography
  id: Topography
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Topography
  nameWithType: BuiltInMaterials.Topography
  fullName: Elements.BuiltInMaterials.Topography
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Topography
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 68
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nTopography\n"
  example: []
  syntax:
    content: public static Material Topography { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Topography As Material
  overload: Elements.BuiltInMaterials.Topography*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.EdgesHighlighted
  commentId: P:Elements.BuiltInMaterials.EdgesHighlighted
  id: EdgesHighlighted
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: EdgesHighlighted
  nameWithType: BuiltInMaterials.EdgesHighlighted
  fullName: Elements.BuiltInMaterials.EdgesHighlighted
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: EdgesHighlighted
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 73
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nEdges Highlighted\n"
  example: []
  syntax:
    content: public static Material EdgesHighlighted { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property EdgesHighlighted As Material
  overload: Elements.BuiltInMaterials.EdgesHighlighted*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.Void
  commentId: P:Elements.BuiltInMaterials.Void
  id: Void
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Void
  nameWithType: BuiltInMaterials.Void
  fullName: Elements.BuiltInMaterials.Void
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Void
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 78
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nVoid\n"
  example: []
  syntax:
    content: public static Material Void { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Void As Material
  overload: Elements.BuiltInMaterials.Void*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.XAxis
  commentId: P:Elements.BuiltInMaterials.XAxis
  id: XAxis
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: XAxis
  nameWithType: BuiltInMaterials.XAxis
  fullName: Elements.BuiltInMaterials.XAxis
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: XAxis
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 83
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nX Axis\n"
  example: []
  syntax:
    content: public static Material XAxis { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property XAxis As Material
  overload: Elements.BuiltInMaterials.XAxis*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.YAxis
  commentId: P:Elements.BuiltInMaterials.YAxis
  id: YAxis
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: YAxis
  nameWithType: BuiltInMaterials.YAxis
  fullName: Elements.BuiltInMaterials.YAxis
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: YAxis
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 88
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nY Axis\n"
  example: []
  syntax:
    content: public static Material YAxis { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property YAxis As Material
  overload: Elements.BuiltInMaterials.YAxis*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.ZAxis
  commentId: P:Elements.BuiltInMaterials.ZAxis
  id: ZAxis
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: ZAxis
  nameWithType: BuiltInMaterials.ZAxis
  fullName: Elements.BuiltInMaterials.ZAxis
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: ZAxis
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 93
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nZ Axis\n"
  example: []
  syntax:
    content: public static Material ZAxis { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property ZAxis As Material
  overload: Elements.BuiltInMaterials.ZAxis*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Elements.BuiltInMaterials.Trans
  commentId: P:Elements.BuiltInMaterials.Trans
  id: Trans
  parent: Elements.BuiltInMaterials
  langs:
  - csharp
  - vb
  name: Trans
  nameWithType: BuiltInMaterials.Trans
  fullName: Elements.BuiltInMaterials.Trans
  type: Property
  source:
    remote:
      path: src/Elements/BuiltInMaterials.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Trans
    path: ../src/Elements/BuiltInMaterials.cs
    startLine: 98
  assemblies:
  - Hypar.Elements
  namespace: Elements
  summary: "\nFully transparent material.\n"
  example: []
  syntax:
    content: public static Material Trans { get; }
    parameters: []
    return:
      type: Elements.Material
    content.vb: Public Shared ReadOnly Property Trans As Material
  overload: Elements.BuiltInMaterials.Trans*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Elements
  commentId: N:Elements
  name: Elements
  nameWithType: Elements
  fullName: Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.BuiltInMaterials.Glass*
  commentId: Overload:Elements.BuiltInMaterials.Glass
  name: Glass
  nameWithType: BuiltInMaterials.Glass
  fullName: Elements.BuiltInMaterials.Glass
- uid: Elements.Material
  commentId: T:Elements.Material
  parent: Elements
  name: Material
  nameWithType: Material
  fullName: Elements.Material
- uid: Elements.BuiltInMaterials.Steel*
  commentId: Overload:Elements.BuiltInMaterials.Steel
  name: Steel
  nameWithType: BuiltInMaterials.Steel
  fullName: Elements.BuiltInMaterials.Steel
- uid: Elements.BuiltInMaterials.Default*
  commentId: Overload:Elements.BuiltInMaterials.Default
  name: Default
  nameWithType: BuiltInMaterials.Default
  fullName: Elements.BuiltInMaterials.Default
- uid: Elements.BuiltInMaterials.Mass*
  commentId: Overload:Elements.BuiltInMaterials.Mass
  name: Mass
  nameWithType: BuiltInMaterials.Mass
  fullName: Elements.BuiltInMaterials.Mass
- uid: Elements.BuiltInMaterials.Wood*
  commentId: Overload:Elements.BuiltInMaterials.Wood
  name: Wood
  nameWithType: BuiltInMaterials.Wood
  fullName: Elements.BuiltInMaterials.Wood
- uid: Elements.BuiltInMaterials.Black*
  commentId: Overload:Elements.BuiltInMaterials.Black
  name: Black
  nameWithType: BuiltInMaterials.Black
  fullName: Elements.BuiltInMaterials.Black
- uid: Elements.BuiltInMaterials.Edges*
  commentId: Overload:Elements.BuiltInMaterials.Edges
  name: Edges
  nameWithType: BuiltInMaterials.Edges
  fullName: Elements.BuiltInMaterials.Edges
- uid: Elements.BuiltInMaterials.Topography*
  commentId: Overload:Elements.BuiltInMaterials.Topography
  name: Topography
  nameWithType: BuiltInMaterials.Topography
  fullName: Elements.BuiltInMaterials.Topography
- uid: Elements.BuiltInMaterials.EdgesHighlighted*
  commentId: Overload:Elements.BuiltInMaterials.EdgesHighlighted
  name: EdgesHighlighted
  nameWithType: BuiltInMaterials.EdgesHighlighted
  fullName: Elements.BuiltInMaterials.EdgesHighlighted
- uid: Elements.BuiltInMaterials.Void*
  commentId: Overload:Elements.BuiltInMaterials.Void
  name: Void
  nameWithType: BuiltInMaterials.Void
  fullName: Elements.BuiltInMaterials.Void
- uid: Elements.BuiltInMaterials.XAxis*
  commentId: Overload:Elements.BuiltInMaterials.XAxis
  name: XAxis
  nameWithType: BuiltInMaterials.XAxis
  fullName: Elements.BuiltInMaterials.XAxis
- uid: Elements.BuiltInMaterials.YAxis*
  commentId: Overload:Elements.BuiltInMaterials.YAxis
  name: YAxis
  nameWithType: BuiltInMaterials.YAxis
  fullName: Elements.BuiltInMaterials.YAxis
- uid: Elements.BuiltInMaterials.ZAxis*
  commentId: Overload:Elements.BuiltInMaterials.ZAxis
  name: ZAxis
  nameWithType: BuiltInMaterials.ZAxis
  fullName: Elements.BuiltInMaterials.ZAxis
- uid: Elements.BuiltInMaterials.Trans*
  commentId: Overload:Elements.BuiltInMaterials.Trans
  name: Trans
  nameWithType: BuiltInMaterials.Trans
  fullName: Elements.BuiltInMaterials.Trans
