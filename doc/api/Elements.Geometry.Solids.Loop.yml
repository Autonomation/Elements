### YamlMime:ManagedReference
items:
- uid: Elements.Geometry.Solids.Loop
  commentId: T:Elements.Geometry.Solids.Loop
  id: Loop
  parent: Elements.Geometry.Solids
  children:
  - Elements.Geometry.Solids.Loop.#ctor
  - Elements.Geometry.Solids.Loop.#ctor(Elements.Geometry.Solids.HalfEdge[])
  - Elements.Geometry.Solids.Loop.AddEdgeToEnd(Elements.Geometry.Solids.HalfEdge)
  - Elements.Geometry.Solids.Loop.AddEdgeToStart(Elements.Geometry.Solids.HalfEdge)
  - Elements.Geometry.Solids.Loop.Edges
  - Elements.Geometry.Solids.Loop.Face
  - Elements.Geometry.Solids.Loop.InsertEdgeAfter(Elements.Geometry.Solids.HalfEdge,Elements.Geometry.Solids.HalfEdge)
  - Elements.Geometry.Solids.Loop.InsertEdgeBefore(Elements.Geometry.Solids.HalfEdge,Elements.Geometry.Solids.HalfEdge)
  langs:
  - csharp
  - vb
  name: Loop
  nameWithType: Loop
  fullName: Elements.Geometry.Solids.Loop
  type: Class
  source:
    remote:
      path: src/Elements/Geometry/Solids/Loop.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Loop
    path: ../src/Elements/Geometry/Solids/Loop.cs
    startLine: 7
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Solids
  summary: "\nA Loop of HalfEdges which bound a Face.\n"
  example: []
  syntax:
    content: public class Loop
    content.vb: Public Class Loop
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Elements.Geometry.Solids.Loop.Face
  commentId: P:Elements.Geometry.Solids.Loop.Face
  id: Face
  parent: Elements.Geometry.Solids.Loop
  langs:
  - csharp
  - vb
  name: Face
  nameWithType: Loop.Face
  fullName: Elements.Geometry.Solids.Loop.Face
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Solids/Loop.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Face
    path: ../src/Elements/Geometry/Solids/Loop.cs
    startLine: 12
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Solids
  summary: "\nThe Face to which this Loop corresponds.\n"
  example: []
  syntax:
    content: public Face Face { get; set; }
    parameters: []
    return:
      type: Elements.Geometry.Solids.Face
    content.vb: Public Property Face As Face
  overload: Elements.Geometry.Solids.Loop.Face*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Elements.Geometry.Solids.Loop.Edges
  commentId: P:Elements.Geometry.Solids.Loop.Edges
  id: Edges
  parent: Elements.Geometry.Solids.Loop
  langs:
  - csharp
  - vb
  name: Edges
  nameWithType: Loop.Edges
  fullName: Elements.Geometry.Solids.Loop.Edges
  type: Property
  source:
    remote:
      path: src/Elements/Geometry/Solids/Loop.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Edges
    path: ../src/Elements/Geometry/Solids/Loop.cs
    startLine: 17
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Solids
  summary: "\nA collection of HalfEdges which comprise the Loop.\n"
  example: []
  syntax:
    content: public List<HalfEdge> Edges { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Elements.Geometry.Solids.HalfEdge}
    content.vb: Public ReadOnly Property Edges As List(Of HalfEdge)
  overload: Elements.Geometry.Solids.Loop.Edges*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.Geometry.Solids.Loop.#ctor
  commentId: M:Elements.Geometry.Solids.Loop.#ctor
  id: '#ctor'
  parent: Elements.Geometry.Solids.Loop
  langs:
  - csharp
  - vb
  name: Loop()
  nameWithType: Loop.Loop()
  fullName: Elements.Geometry.Solids.Loop.Loop()
  type: Constructor
  source:
    remote:
      path: src/Elements/Geometry/Solids/Loop.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Geometry/Solids/Loop.cs
    startLine: 22
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Solids
  summary: "\nConstruct a Loop.\n"
  example: []
  syntax:
    content: public Loop()
    content.vb: Public Sub New
  overload: Elements.Geometry.Solids.Loop.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Geometry.Solids.Loop.#ctor(Elements.Geometry.Solids.HalfEdge[])
  commentId: M:Elements.Geometry.Solids.Loop.#ctor(Elements.Geometry.Solids.HalfEdge[])
  id: '#ctor(Elements.Geometry.Solids.HalfEdge[])'
  parent: Elements.Geometry.Solids.Loop
  langs:
  - csharp
  - vb
  name: Loop(HalfEdge[])
  nameWithType: Loop.Loop(HalfEdge[])
  fullName: Elements.Geometry.Solids.Loop.Loop(Elements.Geometry.Solids.HalfEdge[])
  type: Constructor
  source:
    remote:
      path: src/Elements/Geometry/Solids/Loop.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/Geometry/Solids/Loop.cs
    startLine: 31
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Solids
  summary: "\nConstruct a Loop from an array of HalfEdges.\n"
  example: []
  syntax:
    content: public Loop(HalfEdge[] edges)
    parameters:
    - id: edges
      type: Elements.Geometry.Solids.HalfEdge[]
      description: ''
    content.vb: Public Sub New(edges As HalfEdge())
  overload: Elements.Geometry.Solids.Loop.#ctor*
  nameWithType.vb: Loop.Loop(HalfEdge())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Elements.Geometry.Solids.Loop.Loop(Elements.Geometry.Solids.HalfEdge())
  name.vb: Loop(HalfEdge())
- uid: Elements.Geometry.Solids.Loop.AddEdgeToStart(Elements.Geometry.Solids.HalfEdge)
  commentId: M:Elements.Geometry.Solids.Loop.AddEdgeToStart(Elements.Geometry.Solids.HalfEdge)
  id: AddEdgeToStart(Elements.Geometry.Solids.HalfEdge)
  parent: Elements.Geometry.Solids.Loop
  langs:
  - csharp
  - vb
  name: AddEdgeToStart(HalfEdge)
  nameWithType: Loop.AddEdgeToStart(HalfEdge)
  fullName: Elements.Geometry.Solids.Loop.AddEdgeToStart(Elements.Geometry.Solids.HalfEdge)
  type: Method
  source:
    remote:
      path: src/Elements/Geometry/Solids/Loop.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: AddEdgeToStart
    path: ../src/Elements/Geometry/Solids/Loop.cs
    startLine: 45
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Solids
  summary: "\nAdd a HalfEdge ot the start of the Loop.\n"
  example: []
  syntax:
    content: public void AddEdgeToStart(HalfEdge he)
    parameters:
    - id: he
      type: Elements.Geometry.Solids.HalfEdge
      description: ''
    content.vb: Public Sub AddEdgeToStart(he As HalfEdge)
  overload: Elements.Geometry.Solids.Loop.AddEdgeToStart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Geometry.Solids.Loop.AddEdgeToEnd(Elements.Geometry.Solids.HalfEdge)
  commentId: M:Elements.Geometry.Solids.Loop.AddEdgeToEnd(Elements.Geometry.Solids.HalfEdge)
  id: AddEdgeToEnd(Elements.Geometry.Solids.HalfEdge)
  parent: Elements.Geometry.Solids.Loop
  langs:
  - csharp
  - vb
  name: AddEdgeToEnd(HalfEdge)
  nameWithType: Loop.AddEdgeToEnd(HalfEdge)
  fullName: Elements.Geometry.Solids.Loop.AddEdgeToEnd(Elements.Geometry.Solids.HalfEdge)
  type: Method
  source:
    remote:
      path: src/Elements/Geometry/Solids/Loop.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: AddEdgeToEnd
    path: ../src/Elements/Geometry/Solids/Loop.cs
    startLine: 55
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Solids
  summary: "\nAdd a HalfEdge to the end of the Loop.\n"
  example: []
  syntax:
    content: public void AddEdgeToEnd(HalfEdge he)
    parameters:
    - id: he
      type: Elements.Geometry.Solids.HalfEdge
      description: ''
    content.vb: Public Sub AddEdgeToEnd(he As HalfEdge)
  overload: Elements.Geometry.Solids.Loop.AddEdgeToEnd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Geometry.Solids.Loop.InsertEdgeAfter(Elements.Geometry.Solids.HalfEdge,Elements.Geometry.Solids.HalfEdge)
  commentId: M:Elements.Geometry.Solids.Loop.InsertEdgeAfter(Elements.Geometry.Solids.HalfEdge,Elements.Geometry.Solids.HalfEdge)
  id: InsertEdgeAfter(Elements.Geometry.Solids.HalfEdge,Elements.Geometry.Solids.HalfEdge)
  parent: Elements.Geometry.Solids.Loop
  langs:
  - csharp
  - vb
  name: InsertEdgeAfter(HalfEdge, HalfEdge)
  nameWithType: Loop.InsertEdgeAfter(HalfEdge, HalfEdge)
  fullName: Elements.Geometry.Solids.Loop.InsertEdgeAfter(Elements.Geometry.Solids.HalfEdge, Elements.Geometry.Solids.HalfEdge)
  type: Method
  source:
    remote:
      path: src/Elements/Geometry/Solids/Loop.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: InsertEdgeAfter
    path: ../src/Elements/Geometry/Solids/Loop.cs
    startLine: 66
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Solids
  summary: "\nInsert the provided half edge after the target half edge.\n"
  example: []
  syntax:
    content: public void InsertEdgeAfter(HalfEdge target, HalfEdge newEdge)
    parameters:
    - id: target
      type: Elements.Geometry.Solids.HalfEdge
      description: The half after which the new edge will be inserted.
    - id: newEdge
      type: Elements.Geometry.Solids.HalfEdge
      description: The half edge to be inserted.
    content.vb: Public Sub InsertEdgeAfter(target As HalfEdge, newEdge As HalfEdge)
  overload: Elements.Geometry.Solids.Loop.InsertEdgeAfter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Elements.Geometry.Solids.Loop.InsertEdgeBefore(Elements.Geometry.Solids.HalfEdge,Elements.Geometry.Solids.HalfEdge)
  commentId: M:Elements.Geometry.Solids.Loop.InsertEdgeBefore(Elements.Geometry.Solids.HalfEdge,Elements.Geometry.Solids.HalfEdge)
  id: InsertEdgeBefore(Elements.Geometry.Solids.HalfEdge,Elements.Geometry.Solids.HalfEdge)
  parent: Elements.Geometry.Solids.Loop
  langs:
  - csharp
  - vb
  name: InsertEdgeBefore(HalfEdge, HalfEdge)
  nameWithType: Loop.InsertEdgeBefore(HalfEdge, HalfEdge)
  fullName: Elements.Geometry.Solids.Loop.InsertEdgeBefore(Elements.Geometry.Solids.HalfEdge, Elements.Geometry.Solids.HalfEdge)
  type: Method
  source:
    remote:
      path: src/Elements/Geometry/Solids/Loop.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: InsertEdgeBefore
    path: ../src/Elements/Geometry/Solids/Loop.cs
    startLine: 78
  assemblies:
  - Hypar.Elements
  namespace: Elements.Geometry.Solids
  summary: "\nInsert the provided half edge before the target half edge.\n"
  example: []
  syntax:
    content: public void InsertEdgeBefore(HalfEdge target, HalfEdge newEdge)
    parameters:
    - id: target
      type: Elements.Geometry.Solids.HalfEdge
      description: The half before which the new edge will be inserted.
    - id: newEdge
      type: Elements.Geometry.Solids.HalfEdge
      description: The half edge to be inserted.
    content.vb: Public Sub InsertEdgeBefore(target As HalfEdge, newEdge As HalfEdge)
  overload: Elements.Geometry.Solids.Loop.InsertEdgeBefore*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Elements.Geometry.Solids
  commentId: N:Elements.Geometry.Solids
  name: Elements.Geometry.Solids
  nameWithType: Elements.Geometry.Solids
  fullName: Elements.Geometry.Solids
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.Geometry.Solids.Loop.Face*
  commentId: Overload:Elements.Geometry.Solids.Loop.Face
  name: Face
  nameWithType: Loop.Face
  fullName: Elements.Geometry.Solids.Loop.Face
- uid: Elements.Geometry.Solids.Face
  commentId: T:Elements.Geometry.Solids.Face
  parent: Elements.Geometry.Solids
  name: Face
  nameWithType: Face
  fullName: Elements.Geometry.Solids.Face
- uid: Elements.Geometry.Solids.Loop.Edges*
  commentId: Overload:Elements.Geometry.Solids.Loop.Edges
  name: Edges
  nameWithType: Loop.Edges
  fullName: Elements.Geometry.Solids.Loop.Edges
- uid: System.Collections.Generic.List{Elements.Geometry.Solids.HalfEdge}
  commentId: T:System.Collections.Generic.List{Elements.Geometry.Solids.HalfEdge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<HalfEdge>
  nameWithType: List<HalfEdge>
  fullName: System.Collections.Generic.List<Elements.Geometry.Solids.HalfEdge>
  nameWithType.vb: List(Of HalfEdge)
  fullName.vb: System.Collections.Generic.List(Of Elements.Geometry.Solids.HalfEdge)
  name.vb: List(Of HalfEdge)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Elements.Geometry.Solids.HalfEdge
    name: HalfEdge
    nameWithType: HalfEdge
    fullName: Elements.Geometry.Solids.HalfEdge
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Elements.Geometry.Solids.HalfEdge
    name: HalfEdge
    nameWithType: HalfEdge
    fullName: Elements.Geometry.Solids.HalfEdge
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Elements.Geometry.Solids.Loop.#ctor*
  commentId: Overload:Elements.Geometry.Solids.Loop.#ctor
  name: Loop
  nameWithType: Loop.Loop
  fullName: Elements.Geometry.Solids.Loop.Loop
- uid: Elements.Geometry.Solids.HalfEdge[]
  isExternal: true
  name: HalfEdge[]
  nameWithType: HalfEdge[]
  fullName: Elements.Geometry.Solids.HalfEdge[]
  nameWithType.vb: HalfEdge()
  fullName.vb: Elements.Geometry.Solids.HalfEdge()
  name.vb: HalfEdge()
  spec.csharp:
  - uid: Elements.Geometry.Solids.HalfEdge
    name: HalfEdge
    nameWithType: HalfEdge
    fullName: Elements.Geometry.Solids.HalfEdge
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Elements.Geometry.Solids.HalfEdge
    name: HalfEdge
    nameWithType: HalfEdge
    fullName: Elements.Geometry.Solids.HalfEdge
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Elements.Geometry.Solids.Loop.AddEdgeToStart*
  commentId: Overload:Elements.Geometry.Solids.Loop.AddEdgeToStart
  name: AddEdgeToStart
  nameWithType: Loop.AddEdgeToStart
  fullName: Elements.Geometry.Solids.Loop.AddEdgeToStart
- uid: Elements.Geometry.Solids.HalfEdge
  commentId: T:Elements.Geometry.Solids.HalfEdge
  parent: Elements.Geometry.Solids
  name: HalfEdge
  nameWithType: HalfEdge
  fullName: Elements.Geometry.Solids.HalfEdge
- uid: Elements.Geometry.Solids.Loop.AddEdgeToEnd*
  commentId: Overload:Elements.Geometry.Solids.Loop.AddEdgeToEnd
  name: AddEdgeToEnd
  nameWithType: Loop.AddEdgeToEnd
  fullName: Elements.Geometry.Solids.Loop.AddEdgeToEnd
- uid: Elements.Geometry.Solids.Loop.InsertEdgeAfter*
  commentId: Overload:Elements.Geometry.Solids.Loop.InsertEdgeAfter
  name: InsertEdgeAfter
  nameWithType: Loop.InsertEdgeAfter
  fullName: Elements.Geometry.Solids.Loop.InsertEdgeAfter
- uid: Elements.Geometry.Solids.Loop.InsertEdgeBefore*
  commentId: Overload:Elements.Geometry.Solids.Loop.InsertEdgeBefore
  name: InsertEdgeBefore
  nameWithType: Loop.InsertEdgeBefore
  fullName: Elements.Geometry.Solids.Loop.InsertEdgeBefore
