### YamlMime:ManagedReference
items:
- uid: Elements.GeoJSON.MercatorProjection
  commentId: T:Elements.GeoJSON.MercatorProjection
  id: MercatorProjection
  parent: Elements.GeoJSON
  children:
  - Elements.GeoJSON.MercatorProjection.latToY(System.Double)
  - Elements.GeoJSON.MercatorProjection.lonToX(System.Double)
  - Elements.GeoJSON.MercatorProjection.toGeoCoord(System.Double,System.Double)
  - Elements.GeoJSON.MercatorProjection.toPixel(System.Double,System.Double)
  - Elements.GeoJSON.MercatorProjection.xToLon(System.Double)
  - Elements.GeoJSON.MercatorProjection.yToLat(System.Double)
  langs:
  - csharp
  - vb
  name: MercatorProjection
  nameWithType: MercatorProjection
  fullName: Elements.GeoJSON.MercatorProjection
  type: Class
  source:
    remote:
      path: src/Elements/GeoJSON/MercatorProjection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: MercatorProjection
    path: ../src/Elements/GeoJSON/MercatorProjection.cs
    startLine: 8
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nMethods for computing geographic coordinates.\n"
  example: []
  syntax:
    content: public static class MercatorProjection
    content.vb: Public Module MercatorProjection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Elements.GeoJSON.MercatorProjection.toPixel(System.Double,System.Double)
  commentId: M:Elements.GeoJSON.MercatorProjection.toPixel(System.Double,System.Double)
  id: toPixel(System.Double,System.Double)
  parent: Elements.GeoJSON.MercatorProjection
  langs:
  - csharp
  - vb
  name: toPixel(Double, Double)
  nameWithType: MercatorProjection.toPixel(Double, Double)
  fullName: Elements.GeoJSON.MercatorProjection.toPixel(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Elements/GeoJSON/MercatorProjection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: toPixel
    path: ../src/Elements/GeoJSON/MercatorProjection.cs
    startLine: 26
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nGet the coordinates of the longitude and latitude.\n"
  example: []
  syntax:
    content: public static double[] toPixel(double lon, double lat)
    parameters:
    - id: lon
      type: System.Double
      description: ''
    - id: lat
      type: System.Double
      description: ''
    return:
      type: System.Double[]
      description: An array of doubles containing the x, and y coordintes, in meters.
    content.vb: Public Shared Function toPixel(lon As Double, lat As Double) As Double()
  overload: Elements.GeoJSON.MercatorProjection.toPixel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Elements.GeoJSON.MercatorProjection.toGeoCoord(System.Double,System.Double)
  commentId: M:Elements.GeoJSON.MercatorProjection.toGeoCoord(System.Double,System.Double)
  id: toGeoCoord(System.Double,System.Double)
  parent: Elements.GeoJSON.MercatorProjection
  langs:
  - csharp
  - vb
  name: toGeoCoord(Double, Double)
  nameWithType: MercatorProjection.toGeoCoord(Double, Double)
  fullName: Elements.GeoJSON.MercatorProjection.toGeoCoord(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Elements/GeoJSON/MercatorProjection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: toGeoCoord
    path: ../src/Elements/GeoJSON/MercatorProjection.cs
    startLine: 37
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nGet the latitude and longitude of the specified x and y coordinates.\n"
  example: []
  syntax:
    content: public static double[] toGeoCoord(double x, double y)
    parameters:
    - id: x
      type: System.Double
      description: ''
    - id: y
      type: System.Double
      description: ''
    return:
      type: System.Double[]
      description: An array of doubles containing the longitude and latitude in degrees.
    content.vb: Public Shared Function toGeoCoord(x As Double, y As Double) As Double()
  overload: Elements.GeoJSON.MercatorProjection.toGeoCoord*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Elements.GeoJSON.MercatorProjection.lonToX(System.Double)
  commentId: M:Elements.GeoJSON.MercatorProjection.lonToX(System.Double)
  id: lonToX(System.Double)
  parent: Elements.GeoJSON.MercatorProjection
  langs:
  - csharp
  - vb
  name: lonToX(Double)
  nameWithType: MercatorProjection.lonToX(Double)
  fullName: Elements.GeoJSON.MercatorProjection.lonToX(System.Double)
  type: Method
  source:
    remote:
      path: src/Elements/GeoJSON/MercatorProjection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: lonToX
    path: ../src/Elements/GeoJSON/MercatorProjection.cs
    startLine: 47
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nGet the x coordinate, in meters, of the specified longitude.\n"
  example: []
  syntax:
    content: public static double lonToX(double lon)
    parameters:
    - id: lon
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function lonToX(lon As Double) As Double
  overload: Elements.GeoJSON.MercatorProjection.lonToX*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Elements.GeoJSON.MercatorProjection.latToY(System.Double)
  commentId: M:Elements.GeoJSON.MercatorProjection.latToY(System.Double)
  id: latToY(System.Double)
  parent: Elements.GeoJSON.MercatorProjection
  langs:
  - csharp
  - vb
  name: latToY(Double)
  nameWithType: MercatorProjection.latToY(Double)
  fullName: Elements.GeoJSON.MercatorProjection.latToY(System.Double)
  type: Method
  source:
    remote:
      path: src/Elements/GeoJSON/MercatorProjection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: latToY
    path: ../src/Elements/GeoJSON/MercatorProjection.cs
    startLine: 57
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nGet the y coordinate, in meters, of the specified latitude.\n"
  example: []
  syntax:
    content: public static double latToY(double lat)
    parameters:
    - id: lat
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function latToY(lat As Double) As Double
  overload: Elements.GeoJSON.MercatorProjection.latToY*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Elements.GeoJSON.MercatorProjection.xToLon(System.Double)
  commentId: M:Elements.GeoJSON.MercatorProjection.xToLon(System.Double)
  id: xToLon(System.Double)
  parent: Elements.GeoJSON.MercatorProjection
  langs:
  - csharp
  - vb
  name: xToLon(Double)
  nameWithType: MercatorProjection.xToLon(Double)
  fullName: Elements.GeoJSON.MercatorProjection.xToLon(System.Double)
  type: Method
  source:
    remote:
      path: src/Elements/GeoJSON/MercatorProjection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: xToLon
    path: ../src/Elements/GeoJSON/MercatorProjection.cs
    startLine: 73
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nGet the longitude of the specified x coordinate.\n"
  example: []
  syntax:
    content: public static double xToLon(double x)
    parameters:
    - id: x
      type: System.Double
      description: The x coordinate.
    return:
      type: System.Double
      description: The longitude in degrees.
    content.vb: Public Shared Function xToLon(x As Double) As Double
  overload: Elements.GeoJSON.MercatorProjection.xToLon*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Elements.GeoJSON.MercatorProjection.yToLat(System.Double)
  commentId: M:Elements.GeoJSON.MercatorProjection.yToLat(System.Double)
  id: yToLat(System.Double)
  parent: Elements.GeoJSON.MercatorProjection
  langs:
  - csharp
  - vb
  name: yToLat(Double)
  nameWithType: MercatorProjection.yToLat(Double)
  fullName: Elements.GeoJSON.MercatorProjection.yToLat(System.Double)
  type: Method
  source:
    remote:
      path: src/Elements/GeoJSON/MercatorProjection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: yToLat
    path: ../src/Elements/GeoJSON/MercatorProjection.cs
    startLine: 83
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nGet the latitude of the specified y coordinate.\n"
  example: []
  syntax:
    content: public static double yToLat(double y)
    parameters:
    - id: y
      type: System.Double
      description: The y coordinate.
    return:
      type: System.Double
      description: The latitude in degrees.
    content.vb: Public Shared Function yToLat(y As Double) As Double
  overload: Elements.GeoJSON.MercatorProjection.yToLat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Elements.GeoJSON
  commentId: N:Elements.GeoJSON
  name: Elements.GeoJSON
  nameWithType: Elements.GeoJSON
  fullName: Elements.GeoJSON
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.GeoJSON.MercatorProjection.toPixel*
  commentId: Overload:Elements.GeoJSON.MercatorProjection.toPixel
  name: toPixel
  nameWithType: MercatorProjection.toPixel
  fullName: Elements.GeoJSON.MercatorProjection.toPixel
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Elements.GeoJSON.MercatorProjection.toGeoCoord*
  commentId: Overload:Elements.GeoJSON.MercatorProjection.toGeoCoord
  name: toGeoCoord
  nameWithType: MercatorProjection.toGeoCoord
  fullName: Elements.GeoJSON.MercatorProjection.toGeoCoord
- uid: Elements.GeoJSON.MercatorProjection.lonToX*
  commentId: Overload:Elements.GeoJSON.MercatorProjection.lonToX
  name: lonToX
  nameWithType: MercatorProjection.lonToX
  fullName: Elements.GeoJSON.MercatorProjection.lonToX
- uid: Elements.GeoJSON.MercatorProjection.latToY*
  commentId: Overload:Elements.GeoJSON.MercatorProjection.latToY
  name: latToY
  nameWithType: MercatorProjection.latToY
  fullName: Elements.GeoJSON.MercatorProjection.latToY
- uid: Elements.GeoJSON.MercatorProjection.xToLon*
  commentId: Overload:Elements.GeoJSON.MercatorProjection.xToLon
  name: xToLon
  nameWithType: MercatorProjection.xToLon
  fullName: Elements.GeoJSON.MercatorProjection.xToLon
- uid: Elements.GeoJSON.MercatorProjection.yToLat*
  commentId: Overload:Elements.GeoJSON.MercatorProjection.yToLat
  name: yToLat
  nameWithType: MercatorProjection.yToLat
  fullName: Elements.GeoJSON.MercatorProjection.yToLat
