### YamlMime:ManagedReference
items:
- uid: Elements.Serialization.glTF.GltfExtensions
  commentId: T:Elements.Serialization.glTF.GltfExtensions
  id: GltfExtensions
  parent: Elements.Serialization.glTF
  children:
  - Elements.Serialization.glTF.GltfExtensions.ToBase64String(Elements.Model)
  - Elements.Serialization.glTF.GltfExtensions.ToGlTF(Elements.Model,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: GltfExtensions
  nameWithType: GltfExtensions
  fullName: Elements.Serialization.glTF.GltfExtensions
  type: Class
  source:
    remote:
      path: src/Elements/Serialization/glTF/GltfExtensions.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: GltfExtensions
    path: ../src/Elements/Serialization/glTF/GltfExtensions.cs
    startLine: 21
  assemblies:
  - Hypar.Elements
  namespace: Elements.Serialization.glTF
  summary: "\nExtensions for glTF serialization.\n"
  example: []
  syntax:
    content: public static class GltfExtensions
    content.vb: Public Module GltfExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Elements.Serialization.glTF.GltfExtensions.ToGlTF(Elements.Model,System.String,System.Boolean)
  commentId: M:Elements.Serialization.glTF.GltfExtensions.ToGlTF(Elements.Model,System.String,System.Boolean)
  id: ToGlTF(Elements.Model,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Elements.Serialization.glTF.GltfExtensions
  langs:
  - csharp
  - vb
  name: ToGlTF(Model, String, Boolean)
  nameWithType: GltfExtensions.ToGlTF(Model, String, Boolean)
  fullName: Elements.Serialization.glTF.GltfExtensions.ToGlTF(Elements.Model, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Elements/Serialization/glTF/GltfExtensions.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: ToGlTF
    path: ../src/Elements/Serialization/glTF/GltfExtensions.cs
    startLine: 29
  assemblies:
  - Hypar.Elements
  namespace: Elements.Serialization.glTF
  summary: "\nSave a model to gltf.\n"
  example: []
  syntax:
    content: public static void ToGlTF(this Model model, string path, bool useBinarySerialization = true)
    parameters:
    - id: model
      type: Elements.Model
      description: The model to serialize.
    - id: path
      type: System.String
      description: The output path.
    - id: useBinarySerialization
      type: System.Boolean
      description: Should binary serialization be used?
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ToGlTF(model As Model, path As String, useBinarySerialization As Boolean = True)
  overload: Elements.Serialization.glTF.GltfExtensions.ToGlTF*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Elements.Serialization.glTF.GltfExtensions.ToBase64String(Elements.Model)
  commentId: M:Elements.Serialization.glTF.GltfExtensions.ToBase64String(Elements.Model)
  id: ToBase64String(Elements.Model)
  isExtensionMethod: true
  parent: Elements.Serialization.glTF.GltfExtensions
  langs:
  - csharp
  - vb
  name: ToBase64String(Model)
  nameWithType: GltfExtensions.ToBase64String(Model)
  fullName: Elements.Serialization.glTF.GltfExtensions.ToBase64String(Elements.Model)
  type: Method
  source:
    remote:
      path: src/Elements/Serialization/glTF/GltfExtensions.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: ToBase64String
    path: ../src/Elements/Serialization/glTF/GltfExtensions.cs
    startLine: 45
  assemblies:
  - Hypar.Elements
  namespace: Elements.Serialization.glTF
  summary: "\nConvert the Model to a base64 encoded string.\n"
  example: []
  syntax:
    content: public static string ToBase64String(this Model model)
    parameters:
    - id: model
      type: Elements.Model
    return:
      type: System.String
      description: A Base64 string representing the Model.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToBase64String(model As Model) As String
  overload: Elements.Serialization.glTF.GltfExtensions.ToBase64String*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Elements.Serialization.glTF
  commentId: N:Elements.Serialization.glTF
  name: Elements.Serialization.glTF
  nameWithType: Elements.Serialization.glTF
  fullName: Elements.Serialization.glTF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.Serialization.glTF.GltfExtensions.ToGlTF*
  commentId: Overload:Elements.Serialization.glTF.GltfExtensions.ToGlTF
  name: ToGlTF
  nameWithType: GltfExtensions.ToGlTF
  fullName: Elements.Serialization.glTF.GltfExtensions.ToGlTF
- uid: Elements.Model
  commentId: T:Elements.Model
  parent: Elements
  name: Model
  nameWithType: Model
  fullName: Elements.Model
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Elements
  commentId: N:Elements
  name: Elements
  nameWithType: Elements
  fullName: Elements
- uid: Elements.Serialization.glTF.GltfExtensions.ToBase64String*
  commentId: Overload:Elements.Serialization.glTF.GltfExtensions.ToBase64String
  name: ToBase64String
  nameWithType: GltfExtensions.ToBase64String
  fullName: Elements.Serialization.glTF.GltfExtensions.ToBase64String
