### YamlMime:ManagedReference
items:
- uid: Elements.GeoJSON.Polygon
  commentId: T:Elements.GeoJSON.Polygon
  id: Polygon
  parent: Elements.GeoJSON
  children:
  - Elements.GeoJSON.Polygon.#ctor(Elements.GeoJSON.Position[][])
  - Elements.GeoJSON.Polygon.Coordinates
  - Elements.GeoJSON.Polygon.ToPolygons
  langs:
  - csharp
  - vb
  name: Polygon
  nameWithType: Polygon
  fullName: Elements.GeoJSON.Polygon
  type: Class
  source:
    remote:
      path: src/Elements/GeoJSON/Geometry.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Polygon
    path: ../src/Elements/GeoJSON/Geometry.cs
    startLine: 224
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nA GeoJSON polygon.\n"
  example: []
  syntax:
    content: 'public class Polygon : Geometry'
    content.vb: >-
      Public Class Polygon
          Inherits Geometry
  inheritance:
  - System.Object
  - Elements.GeoJSON.Geometry
  inheritedMembers:
  - Elements.GeoJSON.Geometry.Type
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Elements.GeoJSON.Polygon.Coordinates
  commentId: P:Elements.GeoJSON.Polygon.Coordinates
  id: Coordinates
  parent: Elements.GeoJSON.Polygon
  langs:
  - csharp
  - vb
  name: Coordinates
  nameWithType: Polygon.Coordinates
  fullName: Elements.GeoJSON.Polygon.Coordinates
  type: Property
  source:
    remote:
      path: src/Elements/GeoJSON/Geometry.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Coordinates
    path: ../src/Elements/GeoJSON/Geometry.cs
    startLine: 230
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nThe coordinates of the geometry.\n"
  example: []
  syntax:
    content: public Position[][] Coordinates { get; }
    parameters: []
    return:
      type: Elements.GeoJSON.Position[][]
      description: ''
    content.vb: Public ReadOnly Property Coordinates As Position()()
  overload: Elements.GeoJSON.Polygon.Coordinates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.GeoJSON.Polygon.#ctor(Elements.GeoJSON.Position[][])
  commentId: M:Elements.GeoJSON.Polygon.#ctor(Elements.GeoJSON.Position[][])
  id: '#ctor(Elements.GeoJSON.Position[][])'
  parent: Elements.GeoJSON.Polygon
  langs:
  - csharp
  - vb
  name: Polygon(Position[][])
  nameWithType: Polygon.Polygon(Position[][])
  fullName: Elements.GeoJSON.Polygon.Polygon(Elements.GeoJSON.Position[][])
  type: Constructor
  source:
    remote:
      path: src/Elements/GeoJSON/Geometry.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/GeoJSON/Geometry.cs
    startLine: 236
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nConstruct a Polygon.\n"
  example: []
  syntax:
    content: public Polygon(Position[][] coordinates)
    parameters:
    - id: coordinates
      type: Elements.GeoJSON.Position[][]
      description: ''
    content.vb: Public Sub New(coordinates As Position()())
  overload: Elements.GeoJSON.Polygon.#ctor*
  nameWithType.vb: Polygon.Polygon(Position()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Elements.GeoJSON.Polygon.Polygon(Elements.GeoJSON.Position()())
  name.vb: Polygon(Position()())
- uid: Elements.GeoJSON.Polygon.ToPolygons
  commentId: M:Elements.GeoJSON.Polygon.ToPolygons
  id: ToPolygons
  parent: Elements.GeoJSON.Polygon
  langs:
  - csharp
  - vb
  name: ToPolygons()
  nameWithType: Polygon.ToPolygons()
  fullName: Elements.GeoJSON.Polygon.ToPolygons()
  type: Method
  source:
    remote:
      path: src/Elements/GeoJSON/Geometry.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: ToPolygons
    path: ../src/Elements/GeoJSON/Geometry.cs
    startLine: 264
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nConvert the coordinate array to a collection of polylines.\nThe last position of the polygon is dropped.\n"
  example: []
  syntax:
    content: public Polygon[] ToPolygons()
    return:
      type: Elements.Geometry.Polygon[]
      description: ''
    content.vb: Public Function ToPolygons As Polygon()
  overload: Elements.GeoJSON.Polygon.ToPolygons*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Elements.GeoJSON
  commentId: N:Elements.GeoJSON
  name: Elements.GeoJSON
  nameWithType: Elements.GeoJSON
  fullName: Elements.GeoJSON
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Elements.GeoJSON.Geometry
  commentId: T:Elements.GeoJSON.Geometry
  parent: Elements.GeoJSON
  name: Geometry
  nameWithType: Geometry
  fullName: Elements.GeoJSON.Geometry
- uid: Elements.GeoJSON.Geometry.Type
  commentId: P:Elements.GeoJSON.Geometry.Type
  parent: Elements.GeoJSON.Geometry
  name: Type
  nameWithType: Geometry.Type
  fullName: Elements.GeoJSON.Geometry.Type
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.GeoJSON.Polygon.Coordinates*
  commentId: Overload:Elements.GeoJSON.Polygon.Coordinates
  name: Coordinates
  nameWithType: Polygon.Coordinates
  fullName: Elements.GeoJSON.Polygon.Coordinates
- uid: Elements.GeoJSON.Position[][]
  isExternal: true
  name: Position[][]
  nameWithType: Position[][]
  fullName: Elements.GeoJSON.Position[][]
  nameWithType.vb: Position()()
  fullName.vb: Elements.GeoJSON.Position()()
  name.vb: Position()()
  spec.csharp:
  - uid: Elements.GeoJSON.Position
    name: Position
    nameWithType: Position
    fullName: Elements.GeoJSON.Position
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Elements.GeoJSON.Position
    name: Position
    nameWithType: Position
    fullName: Elements.GeoJSON.Position
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Elements.GeoJSON.Polygon.#ctor*
  commentId: Overload:Elements.GeoJSON.Polygon.#ctor
  name: Polygon
  nameWithType: Polygon.Polygon
  fullName: Elements.GeoJSON.Polygon.Polygon
- uid: Elements.GeoJSON.Polygon.ToPolygons*
  commentId: Overload:Elements.GeoJSON.Polygon.ToPolygons
  name: ToPolygons
  nameWithType: Polygon.ToPolygons
  fullName: Elements.GeoJSON.Polygon.ToPolygons
- uid: Elements.Geometry.Polygon[]
  isExternal: true
  name: Polygon[]
  nameWithType: Polygon[]
  fullName: Elements.Geometry.Polygon[]
  nameWithType.vb: Polygon()
  fullName.vb: Elements.Geometry.Polygon()
  name.vb: Polygon()
  spec.csharp:
  - uid: Elements.Geometry.Polygon
    name: Polygon
    nameWithType: Polygon
    fullName: Elements.Geometry.Polygon
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Elements.Geometry.Polygon
    name: Polygon
    nameWithType: Polygon
    fullName: Elements.Geometry.Polygon
  - name: ()
    nameWithType: ()
    fullName: ()
