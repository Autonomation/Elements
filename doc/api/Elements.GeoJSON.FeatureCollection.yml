### YamlMime:ManagedReference
items:
- uid: Elements.GeoJSON.FeatureCollection
  commentId: T:Elements.GeoJSON.FeatureCollection
  id: FeatureCollection
  parent: Elements.GeoJSON
  children:
  - Elements.GeoJSON.FeatureCollection.#ctor(System.Collections.Generic.IEnumerable{Elements.GeoJSON.Feature})
  - Elements.GeoJSON.FeatureCollection.Features
  - Elements.GeoJSON.FeatureCollection.Type
  langs:
  - csharp
  - vb
  name: FeatureCollection
  nameWithType: FeatureCollection
  fullName: Elements.GeoJSON.FeatureCollection
  type: Class
  source:
    remote:
      path: src/Elements/GeoJSON/FeatureCollection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: FeatureCollection
    path: ../src/Elements/GeoJSON/FeatureCollection.cs
    startLine: 8
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nA GeoJSON feature collection.\n"
  example: []
  syntax:
    content: public class FeatureCollection
    content.vb: Public Class FeatureCollection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Elements.GeoJSON.FeatureCollection.Type
  commentId: P:Elements.GeoJSON.FeatureCollection.Type
  id: Type
  parent: Elements.GeoJSON.FeatureCollection
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: FeatureCollection.Type
  fullName: Elements.GeoJSON.FeatureCollection.Type
  type: Property
  source:
    remote:
      path: src/Elements/GeoJSON/FeatureCollection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Type
    path: ../src/Elements/GeoJSON/FeatureCollection.cs
    startLine: 14
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nThe type of the feature.\n"
  example: []
  syntax:
    content: public string Type { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public ReadOnly Property Type As String
  overload: Elements.GeoJSON.FeatureCollection.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Elements.GeoJSON.FeatureCollection.Features
  commentId: P:Elements.GeoJSON.FeatureCollection.Features
  id: Features
  parent: Elements.GeoJSON.FeatureCollection
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: FeatureCollection.Features
  fullName: Elements.GeoJSON.FeatureCollection.Features
  type: Property
  source:
    remote:
      path: src/Elements/GeoJSON/FeatureCollection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: Features
    path: ../src/Elements/GeoJSON/FeatureCollection.cs
    startLine: 25
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nA collection of features.\n"
  example: []
  syntax:
    content: public IEnumerable<Feature> Features { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Elements.GeoJSON.Feature}
      description: ''
    content.vb: Public Property Features As IEnumerable(Of Feature)
  overload: Elements.GeoJSON.FeatureCollection.Features*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Elements.GeoJSON.FeatureCollection.#ctor(System.Collections.Generic.IEnumerable{Elements.GeoJSON.Feature})
  commentId: M:Elements.GeoJSON.FeatureCollection.#ctor(System.Collections.Generic.IEnumerable{Elements.GeoJSON.Feature})
  id: '#ctor(System.Collections.Generic.IEnumerable{Elements.GeoJSON.Feature})'
  parent: Elements.GeoJSON.FeatureCollection
  langs:
  - csharp
  - vb
  name: FeatureCollection(IEnumerable<Feature>)
  nameWithType: FeatureCollection.FeatureCollection(IEnumerable<Feature>)
  fullName: Elements.GeoJSON.FeatureCollection.FeatureCollection(System.Collections.Generic.IEnumerable<Elements.GeoJSON.Feature>)
  type: Constructor
  source:
    remote:
      path: src/Elements/GeoJSON/FeatureCollection.cs
      branch: ba40cd59bf67c7e003af07d127bdae94e7e8fbbc
      repo: https://github.com/hypar-io/Elements
    id: .ctor
    path: ../src/Elements/GeoJSON/FeatureCollection.cs
    startLine: 31
  assemblies:
  - Hypar.Elements
  namespace: Elements.GeoJSON
  summary: "\nConstruct a feature collection.\n"
  example: []
  syntax:
    content: public FeatureCollection(IEnumerable<Feature> features)
    parameters:
    - id: features
      type: System.Collections.Generic.IEnumerable{Elements.GeoJSON.Feature}
      description: A collection of features.
    content.vb: Public Sub New(features As IEnumerable(Of Feature))
  overload: Elements.GeoJSON.FeatureCollection.#ctor*
  nameWithType.vb: FeatureCollection.FeatureCollection(IEnumerable(Of Feature))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Elements.GeoJSON.FeatureCollection.FeatureCollection(System.Collections.Generic.IEnumerable(Of Elements.GeoJSON.Feature))
  name.vb: FeatureCollection(IEnumerable(Of Feature))
references:
- uid: Elements.GeoJSON
  commentId: N:Elements.GeoJSON
  name: Elements.GeoJSON
  nameWithType: Elements.GeoJSON
  fullName: Elements.GeoJSON
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Elements.GeoJSON.FeatureCollection.Type*
  commentId: Overload:Elements.GeoJSON.FeatureCollection.Type
  name: Type
  nameWithType: FeatureCollection.Type
  fullName: Elements.GeoJSON.FeatureCollection.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Elements.GeoJSON.FeatureCollection.Features*
  commentId: Overload:Elements.GeoJSON.FeatureCollection.Features
  name: Features
  nameWithType: FeatureCollection.Features
  fullName: Elements.GeoJSON.FeatureCollection.Features
- uid: System.Collections.Generic.IEnumerable{Elements.GeoJSON.Feature}
  commentId: T:System.Collections.Generic.IEnumerable{Elements.GeoJSON.Feature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Feature>
  nameWithType: IEnumerable<Feature>
  fullName: System.Collections.Generic.IEnumerable<Elements.GeoJSON.Feature>
  nameWithType.vb: IEnumerable(Of Feature)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Elements.GeoJSON.Feature)
  name.vb: IEnumerable(Of Feature)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Elements.GeoJSON.Feature
    name: Feature
    nameWithType: Feature
    fullName: Elements.GeoJSON.Feature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Elements.GeoJSON.Feature
    name: Feature
    nameWithType: Feature
    fullName: Elements.GeoJSON.Feature
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Elements.GeoJSON.FeatureCollection.#ctor*
  commentId: Overload:Elements.GeoJSON.FeatureCollection.#ctor
  name: FeatureCollection
  nameWithType: FeatureCollection.FeatureCollection
  fullName: Elements.GeoJSON.FeatureCollection.FeatureCollection
