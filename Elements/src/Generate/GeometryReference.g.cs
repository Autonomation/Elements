//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.21.0 (Newtonsoft.Json v11.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Spatial;
using Elements.Validators;
using Elements.Serialization.JSON;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements
{
    #pragma warning disable // Disable all warnings

    /// <summary>A reference to a model, hosted at a URL.</summary>
    [Newtonsoft.Json.JsonConverter(typeof(Elements.Serialization.JSON.JsonInheritanceConverter), "discriminator")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class GeometryReference 
    {
        [Newtonsoft.Json.JsonConstructor]
        public GeometryReference(string @geometryUrl, IList<object> @internalGeometry)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<GeometryReference>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @geometryUrl, @internalGeometry});
            }
        
            this.GeometryUrl = @geometryUrl;
            this.InternalGeometry = @internalGeometry;
            
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        /// <summary>The URL where the referenced geometry is hosted</summary>
        [Newtonsoft.Json.JsonProperty("GeometryUrl", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string GeometryUrl { get; set; }
    
        /// <summary>Any geometric data directly contained in this reference.</summary>
        [Newtonsoft.Json.JsonProperty("InternalGeometry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<object> InternalGeometry { get; set; }
    
    
    }
}